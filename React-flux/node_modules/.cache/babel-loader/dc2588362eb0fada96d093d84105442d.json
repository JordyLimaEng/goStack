{"ast":null,"code":"import { call, select, put, all, takeLatest } from 'redux-saga/effects';\nimport api from '../../../services/api';\nimport { formatPrice } from '../../../util/format';\nimport { addToCartSucess, updateAmount } from './actions';\n\nfunction* addToCart({\n  id\n}) {\n  const productExists = yield select(state => state.cart.find(p => p.id === id));\n\n  if (productExists) {\n    const amount = productExists.amount;\n    yield put(updateAmount(id));\n  } else {\n    const response = yield call(api.get, `/products/${id}`);\n    const data = { ...response.data,\n      amount: 1,\n      priceFormatted: formatPrice(response.data.price)\n    };\n    yield put(addToCartSucess(data));\n  }\n}\n\nexport default all([takeLatest('@cart/ADD_REQUEST', addToCart)]);","map":{"version":3,"sources":["/home/jordy/Área de Trabalho/goStack/React-flux/src/store/modules/cart/sagas.js"],"names":["call","select","put","all","takeLatest","api","formatPrice","addToCartSucess","updateAmount","addToCart","id","productExists","state","cart","find","p","amount","response","get","data","priceFormatted","price"],"mappings":"AAAA,SAASA,IAAT,EAAeC,MAAf,EAAuBC,GAAvB,EAA4BC,GAA5B,EAAiCC,UAAjC,QAAmD,oBAAnD;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,SAASC,WAAT,QAA4B,sBAA5B;AAEA,SAASC,eAAT,EAA0BC,YAA1B,QAA8C,WAA9C;;AAEA,UAAUC,SAAV,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAA4B;AAC1B,QAAMC,aAAa,GAAG,MAAMV,MAAM,CAChCW,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,IAAX,CAAgBC,CAAC,IAAIA,CAAC,CAACL,EAAF,KAASA,EAA9B,CADuB,CAAlC;;AAIA,MAAIC,aAAJ,EAAmB;AACjB,UAAMK,MAAM,GAAGL,aAAa,CAACK,MAA7B;AACA,UAAMd,GAAG,CAACM,YAAY,CAACE,EAAD,CAAb,CAAT;AACD,GAHD,MAGO;AACL,UAAMO,QAAQ,GAAG,MAAMjB,IAAI,CAACK,GAAG,CAACa,GAAL,EAAW,aAAYR,EAAG,EAA1B,CAA3B;AAEA,UAAMS,IAAI,GAAG,EACX,GAAGF,QAAQ,CAACE,IADD;AAEXH,MAAAA,MAAM,EAAE,CAFG;AAGXI,MAAAA,cAAc,EAAEd,WAAW,CAACW,QAAQ,CAACE,IAAT,CAAcE,KAAf;AAHhB,KAAb;AAKA,UAAMnB,GAAG,CAACK,eAAe,CAACY,IAAD,CAAhB,CAAT;AACD;AAEF;;AAED,eAAehB,GAAG,CAAC,CACjBC,UAAU,CAAC,mBAAD,EAAsBK,SAAtB,CADO,CAAD,CAAlB","sourcesContent":["import { call, select, put, all, takeLatest } from 'redux-saga/effects'\nimport api from '../../../services/api';\nimport { formatPrice } from '../../../util/format'\n\nimport { addToCartSucess, updateAmount } from './actions'\n\nfunction* addToCart({ id }) {\n  const productExists = yield select(\n    state => state.cart.find(p => p.id === id),\n  )\n\n  if (productExists) {\n    const amount = productExists.amount\n    yield put(updateAmount(id,))\n  } else {\n    const response = yield call(api.get, `/products/${id}`);\n\n    const data = {\n      ...response.data,\n      amount: 1,\n      priceFormatted: formatPrice(response.data.price),\n    }\n    yield put(addToCartSucess(data));\n  }\n  \n}\n\nexport default all([\n  takeLatest('@cart/ADD_REQUEST', addToCart),\n]);"]},"metadata":{},"sourceType":"module"}