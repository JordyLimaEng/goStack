{"ast":null,"code":"var _jsxFileName = \"/home/jordy/\\xC1rea de Trabalho/goStack/React-flux/src/pages/Home/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { MdAddShoppingCart } from 'react-icons/md';\nimport api from '../../services/api';\nimport { formatPrice } from '../../util/format';\nimport { connect } from 'react-redux';\nimport * as CartActions from '../../store/modules/cart/actions';\nimport { ProductList } from './styles';\n\nfunction Home({\n  amount\n}) {\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    async function loadProducts() {\n      const response = await api.get('products');\n      const data = response.data.map(product => ({ ...product,\n        priceFormatted: formatPrice(product.price)\n      }));\n      setProducts(data);\n    }\n\n    loadProducts();\n  }, []);\n\n  handleAddProduct = id => {\n    const {\n      addToCartRequest\n    } = this.props;\n    addToCartRequest(id);\n  };\n\n  return /*#__PURE__*/React.createElement(ProductList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, products.map(product => /*#__PURE__*/React.createElement(\"li\", {\n    key: product.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: product.image,\n    alt: product.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, product.title), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, product.priceFormatted), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => this.handleAddProduct(product.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(MdAddShoppingCart, {\n    size: 16,\n    color: \"#FFF\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }), \" \", amount[product.id] || 0), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }, \"ADICIONAR AO CARRINHO\")))));\n}\n\nconst mapStateToProps = state => ({\n  amount: state.cart.reduce((amount, product) => {\n    amount[product.id] = product.amount;\n    return amount;\n  }, {})\n});\n\nconst mapDispatchtoProps = dispatch => bindActionCreators(CartActions, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchtoProps)(Home);","map":{"version":3,"sources":["/home/jordy/Área de Trabalho/goStack/React-flux/src/pages/Home/index.js"],"names":["React","useState","useEffect","bindActionCreators","MdAddShoppingCart","api","formatPrice","connect","CartActions","ProductList","Home","amount","products","setProducts","loadProducts","response","get","data","map","product","priceFormatted","price","handleAddProduct","id","addToCartRequest","props","image","title","mapStateToProps","state","cart","reduce","mapDispatchtoProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { MdAddShoppingCart } from 'react-icons/md';\nimport api from '../../services/api';\nimport { formatPrice } from '../../util/format';\nimport { connect } from 'react-redux'\n\nimport * as CartActions from '../../store/modules/cart/actions'\n\nimport { ProductList } from './styles';\n\nfunction Home({amount}) {\n  const [products, setProducts] = useState([]);\n\n  useEffect(() => {\n    async function loadProducts() {\n      const response = await api.get('products');\n\n      const data = response.data.map(product => ({\n        ...product,\n        priceFormatted: formatPrice(product.price),\n      }));\n\n      setProducts(data);\n    }\n    loadProducts();\n  }, []);\n\n  handleAddProduct = id => {\n    const { addToCartRequest } = this.props;\n\n    addToCartRequest(id);\n  };\n    return (\n      <ProductList>\n        {products.map(product => (\n          <li key={product.id}>\n            <img\n              src={product.image}\n              alt={product.title}\n            />\n            <strong>{product.title}</strong>\n            <span>{product.priceFormatted}</span>\n\n            <button type=\"button\" onClick={() => this.handleAddProduct(product.id)}>\n              <div>\n                <MdAddShoppingCart size={16} color=\"#FFF\" /> {amount[product.id] || 0}\n              </div>\n\n              <span>ADICIONAR AO CARRINHO</span>\n            </button>\n          </li>\n        ))}\n      </ProductList >\n    );  \n}\n\nconst mapStateToProps = state => ({\n  amount: state.cart.reduce((amount, product) => {\n    amount[product.id] = product.amount;\n    return amount;\n  }, {}),\n});\n\nconst mapDispatchtoProps = dispatch =>\n  bindActionCreators(CartActions, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchtoProps)(Home);"]},"metadata":{},"sourceType":"module"}