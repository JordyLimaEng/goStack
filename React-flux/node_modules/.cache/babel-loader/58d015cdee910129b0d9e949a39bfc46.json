{"ast":null,"code":"import produce from 'immer';\nexport default function cart(state = [], action) {\n  switch (action.type) {\n    case '@cart/ADD_SUCESS':\n      return produce(state, draft => {});\n\n    case '@cart/REMOVE':\n      return produce(state, draft => {\n        const productIndex = draft.findIndex(p => p.id === action.id);\n\n        if (productIndex >= 0) {\n          draft.splice(productIndex, 1);\n        }\n      });\n\n    case '@cart/UPDATE_AMOUNT':\n      {\n        if (action.amount <= 0) {\n          return state;\n        }\n\n        return produce(state, draft => {\n          const productIndex = draft.findIndex(p => p.id === action.id);\n\n          if (productIndex >= 0) {\n            draft[productIndex].amount = Number(action.amount);\n          }\n        });\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/jordy/Área de Trabalho/goStack/React-flux/src/store/modules/cart/reducer.js"],"names":["produce","cart","state","action","type","draft","productIndex","findIndex","p","id","splice","amount","Number"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,OAApB;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAK,GAAG,EAAtB,EAA0BC,MAA1B,EAAkC;AAC/C,UAAQA,MAAM,CAACC,IAAf;AAEE,SAAK,kBAAL;AACE,aAAOJ,OAAO,CAACE,KAAD,EAAQG,KAAK,IAAI,CAE9B,CAFa,CAAd;;AAIF,SAAK,cAAL;AACE,aAAOL,OAAO,CAACE,KAAD,EAAQG,KAAK,IAAI;AAC7B,cAAMC,YAAY,GAAGD,KAAK,CAACE,SAAN,CAAgBC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASN,MAAM,CAACM,EAArC,CAArB;;AAEA,YAAIH,YAAY,IAAI,CAApB,EAAuB;AACrBD,UAAAA,KAAK,CAACK,MAAN,CAAaJ,YAAb,EAA2B,CAA3B;AACD;AACF,OANa,CAAd;;AAQF,SAAK,qBAAL;AAA4B;AAE1B,YAAIH,MAAM,CAACQ,MAAP,IAAiB,CAArB,EAAwB;AACtB,iBAAOT,KAAP;AACD;;AAED,eAAOF,OAAO,CAACE,KAAD,EAAQG,KAAK,IAAI;AAC7B,gBAAMC,YAAY,GAAGD,KAAK,CAACE,SAAN,CAAgBC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASN,MAAM,CAACM,EAArC,CAArB;;AAEA,cAAIH,YAAY,IAAI,CAApB,EAAuB;AACrBD,YAAAA,KAAK,CAACC,YAAD,CAAL,CAAoBK,MAApB,GAA6BC,MAAM,CAACT,MAAM,CAACQ,MAAR,CAAnC;AACD;AACF,SANa,CAAd;AAOD;;AAED;AACE,aAAOT,KAAP;AAhCJ;AAkCD","sourcesContent":["import produce from 'immer';\n\nexport default function cart(state = [], action) {\n  switch (action.type) {\n\n    case '@cart/ADD_SUCESS':\n      return produce(state, draft => {\n        \n      });\n\n    case '@cart/REMOVE':\n      return produce(state, draft => {\n        const productIndex = draft.findIndex(p => p.id === action.id);\n\n        if (productIndex >= 0) {\n          draft.splice(productIndex, 1);\n        }\n      });\n\n    case '@cart/UPDATE_AMOUNT': {\n\n      if (action.amount <= 0) {\n        return state;\n      }\n\n      return produce(state, draft => {\n        const productIndex = draft.findIndex(p => p.id === action.id);\n\n        if (productIndex >= 0) {\n          draft[productIndex].amount = Number(action.amount);\n        }\n      });\n    }\n\n    default:\n      return state;\n  }\n}"]},"metadata":{},"sourceType":"module"}