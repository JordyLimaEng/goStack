{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopDefault(ex) {\n  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;\n}\n\nvar React = require('react');\n\nvar reactDom = require('react-dom');\n\nvar reactTransitionGroup = require('react-transition-group');\n\nvar cx = _interopDefault(require('classnames'));\n\nvar PropTypes = _interopDefault(require('prop-types'));\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar eventManager = {\n  list: /*#__PURE__*/new Map(),\n  emitQueue: /*#__PURE__*/new Map(),\n  on: function on(event, callback) {\n    this.list.has(event) || this.list.set(event, []);\n    this.list.get(event).push(callback);\n    return this;\n  },\n  off: function off(event, callback) {\n    if (callback) {\n      var cb = this.list.get(event).filter(function (cb) {\n        return cb !== callback;\n      });\n      this.list.set(event, cb);\n      return this;\n    }\n\n    this.list[\"delete\"](event);\n    return this;\n  },\n  cancelEmit: function cancelEmit(event) {\n    var timers = this.emitQueue.get(event);\n\n    if (timers) {\n      timers.forEach(function (timer) {\n        return clearTimeout(timer);\n      });\n      this.emitQueue[\"delete\"](event);\n    }\n\n    return this;\n  },\n\n  /**\r\n   * Enqueue the event at the end of the call stack\r\n   * Doing so let the user call toast as follow:\r\n   * toast('1')\r\n   * toast('2')\r\n   * toast('3')\r\n   * Without setTimemout the code above will not work\r\n   */\n  emit: function emit(event) {\n    var _this = this;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    this.list.has(event) && this.list.get(event).forEach(function (callback) {\n      var timer = setTimeout(function () {\n        // @ts-ignore\n        callback.apply(void 0, args);\n      }, 0);\n      _this.emitQueue.has(event) || _this.emitQueue.set(event, []);\n\n      _this.emitQueue.get(event).push(timer);\n    });\n  }\n};\n\nfunction isNum(v) {\n  return typeof v === 'number' && !isNaN(v);\n}\n\nfunction isBool(v) {\n  return typeof v === 'boolean';\n}\n\nfunction isStr(v) {\n  return typeof v === 'string';\n}\n\nfunction isFn(v) {\n  return typeof v === 'function';\n}\n\nfunction parseClassName(v) {\n  return typeof v === 'string' ? v : null;\n}\n\nfunction objectValues(obj) {\n  return Object.keys(obj).map(function (key) {\n    return obj[key];\n  });\n}\n\nfunction hasToastId(toastId) {\n  return toastId === 0 || toastId;\n}\n\nfunction getAutoCloseDelay(toastAutoClose, containerAutoClose) {\n  return toastAutoClose === false || isNum(toastAutoClose) && toastAutoClose > 0 ? toastAutoClose : containerAutoClose;\n}\n\nvar canUseDom = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\nfunction canBeRendered(content) {\n  return React.isValidElement(content) || isStr(content) || isFn(content) || isNum(content);\n}\n\nvar POSITION = {\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n  TOP_CENTER: 'top-center',\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  BOTTOM_CENTER: 'bottom-center'\n};\nvar TYPE = {\n  INFO: 'info',\n  SUCCESS: 'success',\n  WARNING: 'warning',\n  ERROR: 'error',\n  DEFAULT: 'default',\n  DARK: 'dark'\n};\n/**\r\n * Used to collapse toast after exit animation\r\n */\n\nfunction collapseToast(node, done, duration\n/* COLLAPSE_DURATION */\n) {\n  if (duration === void 0) {\n    duration = 300;\n  }\n\n  var height = node.scrollHeight;\n  var style = node.style;\n  requestAnimationFrame(function () {\n    style.minHeight = 'initial';\n    style.height = height + 'px';\n    style.transition = \"all \" + duration + \"ms\";\n    requestAnimationFrame(function () {\n      style.height = '0';\n      style.padding = '0';\n      style.margin = '0';\n      setTimeout(function () {\n        return done();\n      }, duration);\n    });\n  });\n}\n\nfunction cssTransition(_ref) {\n  var enter = _ref.enter,\n      exit = _ref.exit,\n      _ref$duration = _ref.duration,\n      duration = _ref$duration === void 0 ? 750 : _ref$duration,\n      _ref$appendPosition = _ref.appendPosition,\n      appendPosition = _ref$appendPosition === void 0 ? false : _ref$appendPosition,\n      _ref$collapse = _ref.collapse,\n      collapse = _ref$collapse === void 0 ? true : _ref$collapse,\n      _ref$collapseDuration = _ref.collapseDuration,\n      collapseDuration = _ref$collapseDuration === void 0 ? 300 : _ref$collapseDuration;\n  var enterDuration, exitDuration;\n\n  if (Array.isArray(duration) && duration.length === 2) {\n    enterDuration = duration[0];\n    exitDuration = duration[1];\n  } else {\n    enterDuration = exitDuration = duration;\n  }\n\n  return function ToastTransition(_ref2) {\n    var children = _ref2.children,\n        position = _ref2.position,\n        preventExitTransition = _ref2.preventExitTransition,\n        done = _ref2.done,\n        props = _objectWithoutPropertiesLoose(_ref2, [\"children\", \"position\", \"preventExitTransition\", \"done\"]);\n\n    var enterClassName = appendPosition ? enter + \"--\" + position : enter;\n    var exitClassName = appendPosition ? exit + \"--\" + position : exit;\n\n    var onEnter = function onEnter() {\n      var node = props.nodeRef.current;\n\n      if (node) {\n        node.classList.add(enterClassName);\n        node.style.animationFillMode = 'forwards';\n        node.style.animationDuration = enterDuration + \"ms\";\n      }\n    };\n\n    var onEntered = function onEntered() {\n      var node = props.nodeRef.current;\n\n      if (node) {\n        node.classList.remove(enterClassName);\n        node.style.cssText = '';\n      }\n    };\n\n    var onExited = function onExited() {\n      var node = props.nodeRef.current;\n\n      if (node) {\n        node.removeEventListener('animationend', onExited);\n        collapse ? collapseToast(node, done, collapseDuration) : done();\n      }\n    };\n\n    var onExit = function onExit() {\n      var node = props.nodeRef.current;\n\n      if (node) {\n        node.classList.add(exitClassName);\n        node.style.animationFillMode = 'forwards';\n        node.style.animationDuration = exitDuration + \"ms\";\n        node.addEventListener('animationend', onExited);\n      }\n    };\n\n    return React.createElement(reactTransitionGroup.Transition, Object.assign({}, props, {\n      timeout: preventExitTransition ? collapse ? collapseDuration : 50\n      /* DEBOUNCE_DURATION */\n      : {\n        enter: enterDuration,\n        exit: collapse ? exitDuration + collapseDuration : exitDuration + 50\n        /* DEBOUNCE_DURATION */\n\n      },\n      onEnter: onEnter,\n      onEntered: onEntered,\n      onExit: preventExitTransition ? onExited : onExit,\n      unmountOnExit: true\n    }), children);\n  };\n}\n\nfunction CloseButton(_ref) {\n  var closeToast = _ref.closeToast,\n      type = _ref.type,\n      _ref$ariaLabel = _ref.ariaLabel,\n      ariaLabel = _ref$ariaLabel === void 0 ? 'close' : _ref$ariaLabel;\n  return React.createElement(\"button\", {\n    className: \"Toastify\"\n    /* CSS_NAMESPACE */\n    + \"__close-button \" + \"Toastify\"\n    /* CSS_NAMESPACE */\n    + \"__close-button--\" + type,\n    type: \"button\",\n    onClick: function onClick(e) {\n      e.stopPropagation();\n      closeToast(e);\n    },\n    \"aria-label\": ariaLabel\n  }, React.createElement(\"svg\", {\n    \"aria-hidden\": \"true\",\n    viewBox: \"0 0 14 16\"\n  }, React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M7.71 8.23l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75L1 11.98l3.75-3.75L1 4.48 2.48 3l3.75 3.75L9.98 3l1.48 1.48-3.75 3.75z\"\n  })));\n}\n\nfunction ProgressBar(_ref) {\n  var _cx, _animationEvent;\n\n  var delay = _ref.delay,\n      isRunning = _ref.isRunning,\n      closeToast = _ref.closeToast,\n      type = _ref.type,\n      hide = _ref.hide,\n      className = _ref.className,\n      userStyle = _ref.style,\n      controlledProgress = _ref.controlledProgress,\n      progress = _ref.progress,\n      rtl = _ref.rtl,\n      isIn = _ref.isIn;\n\n  var style = _extends(_extends({}, userStyle), {}, {\n    animationDuration: delay + \"ms\",\n    animationPlayState: isRunning ? 'running' : 'paused',\n    opacity: hide ? 0 : 1\n  });\n\n  if (controlledProgress) style.transform = \"scaleX(\" + progress + \")\";\n  var classNames = cx(\"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__progress-bar\", controlledProgress ? \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__progress-bar--controlled\" : \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__progress-bar--animated\", \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__progress-bar--\" + type, (_cx = {}, _cx[\"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__progress-bar--rtl\"] = rtl, _cx), className); // 🧐 controlledProgress is derived from progress\n  // so if controlledProgress is set\n  // it means that this is also the case for progress\n\n  var animationEvent = (_animationEvent = {}, _animationEvent[controlledProgress && progress >= 1 ? 'onTransitionEnd' : 'onAnimationEnd'] = controlledProgress && progress < 1 ? null : function () {\n    isIn && closeToast();\n  }, _animationEvent);\n  return React.createElement(\"div\", Object.assign({\n    className: classNames,\n    style: style\n  }, animationEvent));\n}\n\nProgressBar.defaultProps = {\n  type: TYPE.DEFAULT,\n  hide: false\n};\n\nvar Toast = function Toast(props) {\n  var _cx;\n\n  var _useToast = useToast(props),\n      isRunning = _useToast.isRunning,\n      preventExitTransition = _useToast.preventExitTransition,\n      toastRef = _useToast.toastRef,\n      eventHandlers = _useToast.eventHandlers;\n\n  var closeButton = props.closeButton,\n      children = props.children,\n      autoClose = props.autoClose,\n      onClick = props.onClick,\n      type = props.type,\n      hideProgressBar = props.hideProgressBar,\n      closeToast = props.closeToast,\n      Transition = props.transition,\n      position = props.position,\n      className = props.className,\n      style = props.style,\n      bodyClassName = props.bodyClassName,\n      bodyStyle = props.bodyStyle,\n      progressClassName = props.progressClassName,\n      progressStyle = props.progressStyle,\n      updateId = props.updateId,\n      role = props.role,\n      progress = props.progress,\n      rtl = props.rtl,\n      toastId = props.toastId,\n      deleteToast = props.deleteToast;\n  var cssClasses = cx(\"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__toast\", \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__toast--\" + type, (_cx = {}, _cx[\"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__toast--rtl\"] = rtl, _cx), className);\n  var controlledProgress = !!progress;\n\n  function renderCloseButton(closeButton) {\n    if (!closeButton) return null;\n    var props = {\n      closeToast: closeToast,\n      type: type\n    };\n    if (isFn(closeButton)) return closeButton(props);\n    if (React.isValidElement(closeButton)) return React.cloneElement(closeButton, props);\n  }\n\n  return React.createElement(Transition, {\n    \"in\": props[\"in\"],\n    appear: true,\n    done: deleteToast,\n    position: position,\n    preventExitTransition: preventExitTransition,\n    nodeRef: toastRef\n  }, React.createElement(\"div\", Object.assign({\n    id: toastId,\n    onClick: onClick,\n    className: cssClasses\n  }, eventHandlers, {\n    style: style,\n    ref: toastRef\n  }), React.createElement(\"div\", Object.assign({}, props[\"in\"] && {\n    role: role\n  }, {\n    className: cx(\"Toastify\"\n    /* CSS_NAMESPACE */\n    + \"__toast-body\", bodyClassName),\n    style: bodyStyle\n  }), children), renderCloseButton(closeButton), (autoClose || controlledProgress) && React.createElement(ProgressBar, Object.assign({}, updateId && !controlledProgress ? {\n    key: \"pb-\" + updateId\n  } : {}, {\n    rtl: rtl,\n    delay: autoClose,\n    isRunning: isRunning,\n    isIn: props[\"in\"],\n    closeToast: closeToast,\n    hide: hideProgressBar,\n    type: type,\n    style: progressStyle,\n    className: progressClassName,\n    controlledProgress: controlledProgress,\n    progress: progress\n  }))));\n};\n\nvar Bounce = /*#__PURE__*/cssTransition({\n  enter: \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__bounce-enter\",\n  exit: \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__bounce-exit\",\n  appendPosition: true\n});\nvar Slide = /*#__PURE__*/cssTransition({\n  enter: \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__slide-enter\",\n  exit: \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__slide-exit\",\n  duration: [450, 750],\n  appendPosition: true\n});\nvar Zoom = /*#__PURE__*/cssTransition({\n  enter: \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__zoom-enter\",\n  exit: \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__zoom-exit\"\n});\nvar Flip = /*#__PURE__*/cssTransition({\n  enter: \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__flip-enter\",\n  exit: \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__flip-exit\"\n});\n\nvar ToastPositioner = function ToastPositioner(_ref) {\n  var children = _ref.children,\n      className = _ref.className,\n      style = _ref.style,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"children\", \"className\", \"style\"]); // Monkey patch react-transition-group\n  // As exit transition is broken with strict mode\n\n\n  delete rest[\"in\"];\n  return React.createElement(\"div\", {\n    className: className,\n    style: style\n  }, React.Children.map(children, function (child) {\n    return React.cloneElement(child, rest);\n  }));\n};\n\nvar ToastContainer = function ToastContainer(props) {\n  var _useToastContainer = useToastContainer(props),\n      getToastToRender = _useToastContainer.getToastToRender,\n      containerRef = _useToastContainer.containerRef,\n      isToastActive = _useToastContainer.isToastActive;\n\n  var className = props.className,\n      style = props.style,\n      rtl = props.rtl,\n      containerId = props.containerId;\n  return React.createElement(\"div\", {\n    ref: containerRef,\n    className: \"Toastify\"\n    /* CSS_NAMESPACE */\n    ,\n    id: containerId\n  }, getToastToRender(function (position, toastList) {\n    var _cx;\n\n    var swag = {\n      className: cx(\"Toastify\"\n      /* CSS_NAMESPACE */\n      + \"__toast-container\", \"Toastify\"\n      /* CSS_NAMESPACE */\n      + \"__toast-container--\" + position, (_cx = {}, _cx[\"Toastify\"\n      /* CSS_NAMESPACE */\n      + \"__toast-container--rtl\"] = rtl, _cx), parseClassName(className)),\n      style: toastList.length === 0 ? _extends(_extends({}, style), {}, {\n        pointerEvents: 'none'\n      }) : _extends({}, style)\n    };\n    return React.createElement(ToastPositioner, Object.assign({}, swag, {\n      key: \"container-\" + position\n    }), toastList.map(function (_ref) {\n      var content = _ref.content,\n          toastProps = _ref.props;\n      return React.createElement(Toast, Object.assign({}, toastProps, {\n        \"in\": isToastActive(toastProps.toastId),\n        key: \"toast-\" + toastProps.key,\n        closeButton: toastProps.closeButton === true ? CloseButton : toastProps.closeButton\n      }), content);\n    }));\n  }));\n};\n\n{\n  // @ts-ignore\n  ToastContainer.propTypes = {\n    // @ts-ignore\n    position: /*#__PURE__*/PropTypes.oneOf( /*#__PURE__*/objectValues(POSITION)),\n    // @ts-ignore\n    autoClose: /*#__PURE__*/PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n    // @ts-ignore\n    closeButton: /*#__PURE__*/PropTypes.oneOfType([PropTypes.node, PropTypes.bool, PropTypes.func]),\n    hideProgressBar: PropTypes.bool,\n    pauseOnHover: PropTypes.bool,\n    closeOnClick: PropTypes.bool,\n    newestOnTop: PropTypes.bool,\n    className: PropTypes.string,\n    style: PropTypes.object,\n    toastClassName: PropTypes.string,\n    bodyClassName: PropTypes.string,\n    progressClassName: PropTypes.string,\n    progressStyle: PropTypes.object,\n    transition: PropTypes.func,\n    rtl: PropTypes.bool,\n    draggable: PropTypes.bool,\n    draggablePercent: PropTypes.number,\n    pauseOnFocusLoss: PropTypes.bool,\n    enableMultiContainer: PropTypes.bool,\n    containerId: /*#__PURE__*/PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    role: PropTypes.string,\n    onClick: PropTypes.func\n  };\n}\nToastContainer.defaultProps = {\n  position: POSITION.TOP_RIGHT,\n  transition: Bounce,\n  rtl: false,\n  autoClose: 5000,\n  hideProgressBar: false,\n  closeButton: CloseButton,\n  pauseOnHover: true,\n  pauseOnFocusLoss: true,\n  closeOnClick: true,\n  newestOnTop: false,\n  draggable: true,\n  draggablePercent: 80,\n  role: 'alert'\n};\nvar containers = /*#__PURE__*/new Map();\nvar latestInstance;\nvar containerDomNode;\nvar containerConfig;\nvar queue = [];\nvar lazy = false;\n/**\r\n * Check whether any container is currently mounted in the DOM\r\n */\n\nfunction isAnyContainerMounted() {\n  return containers.size > 0;\n}\n/**\r\n * Get the container by id. Returns the last container declared when no id is given.\r\n */\n\n\nfunction getContainer(containerId) {\n  if (!isAnyContainerMounted()) return null;\n  return containers.get(!containerId ? latestInstance : containerId);\n}\n/**\r\n * Get the toast by id, given it's in the DOM, otherwise returns null\r\n */\n\n\nfunction getToast(toastId, _ref) {\n  var containerId = _ref.containerId;\n  var container = getContainer(containerId);\n  if (!container) return null;\n  return container.getToast(toastId);\n}\n/**\r\n * Generate a random toastId\r\n */\n\n\nfunction generateToastId() {\n  return (Math.random().toString(36) + Date.now().toString(36)).substr(2, 10);\n}\n/**\r\n * Generate a toastId or use the one provided\r\n */\n\n\nfunction getToastId(options) {\n  if (options && (isStr(options.toastId) || isNum(options.toastId))) {\n    return options.toastId;\n  }\n\n  return generateToastId();\n}\n/**\r\n * If the container is not mounted, the toast is enqueued and\r\n * the container lazy mounted\r\n */\n\n\nfunction dispatchToast(content, options) {\n  if (isAnyContainerMounted()) {\n    eventManager.emit(0\n    /* Show */\n    , content, options);\n  } else {\n    queue.push({\n      content: content,\n      options: options\n    });\n\n    if (lazy && canUseDom) {\n      lazy = false;\n      containerDomNode = document.createElement('div');\n      document.body.appendChild(containerDomNode);\n      reactDom.render(React.createElement(ToastContainer, Object.assign({}, containerConfig)), containerDomNode);\n    }\n  }\n\n  return options.toastId;\n}\n/**\r\n * Merge provided options with the defaults settings and generate the toastId\r\n */\n\n\nfunction mergeOptions(type, options) {\n  return _extends(_extends({}, options), {}, {\n    type: options && options.type || type,\n    toastId: getToastId(options)\n  });\n}\n\nvar toast = function toast(content, options) {\n  return dispatchToast(content, mergeOptions(TYPE.DEFAULT, options));\n};\n\ntoast.success = function (content, options) {\n  return dispatchToast(content, mergeOptions(TYPE.SUCCESS, options));\n};\n\ntoast.info = function (content, options) {\n  return dispatchToast(content, mergeOptions(TYPE.INFO, options));\n};\n\ntoast.error = function (content, options) {\n  return dispatchToast(content, mergeOptions(TYPE.ERROR, options));\n};\n\ntoast.warning = function (content, options) {\n  return dispatchToast(content, mergeOptions(TYPE.WARNING, options));\n};\n\ntoast.dark = function (content, options) {\n  return dispatchToast(content, mergeOptions(TYPE.DARK, options));\n};\n/**\r\n * Maybe I should remove warning in favor of warn, I don't know\r\n */\n\n\ntoast.warn = toast.warning;\n/**\r\n * Remove toast programmaticaly\r\n */\n\ntoast.dismiss = function (id) {\n  return isAnyContainerMounted() && eventManager.emit(1\n  /* Clear */\n  , id);\n};\n/**\r\n * Clear waiting queue when limit is used\r\n */\n\n\ntoast.clearWaitingQueue = function (params) {\n  if (params === void 0) {\n    params = {};\n  }\n\n  return isAnyContainerMounted() && eventManager.emit(5\n  /* ClearWaitingQueue */\n  , params);\n};\n/**\r\n * return true if one container is displaying the toast\r\n */\n\n\ntoast.isActive = function (id) {\n  var isToastActive = false;\n  containers.forEach(function (container) {\n    if (container.isToastActive && container.isToastActive(id)) {\n      isToastActive = true;\n    }\n  });\n  return isToastActive;\n};\n\ntoast.update = function (toastId, options) {\n  if (options === void 0) {\n    options = {};\n  } // if you call toast and toast.update directly nothing will be displayed\n  // this is why I defered the update\n\n\n  setTimeout(function () {\n    var toast = getToast(toastId, options);\n\n    if (toast) {\n      var oldOptions = toast.props,\n          oldContent = toast.content;\n\n      var nextOptions = _extends(_extends(_extends({}, oldOptions), options), {}, {\n        toastId: options.toastId || toastId,\n        updateId: generateToastId()\n      });\n\n      if (nextOptions.toastId !== toastId) nextOptions.staleId = toastId;\n      var content = typeof nextOptions.render !== 'undefined' ? nextOptions.render : oldContent;\n      delete nextOptions.render;\n      dispatchToast(content, nextOptions);\n    }\n  }, 0);\n};\n/**\r\n * Used for controlled progress bar.\r\n */\n\n\ntoast.done = function (id) {\n  toast.update(id, {\n    progress: 1\n  });\n};\n/**\r\n * Track changes. The callback get the number of toast displayed\r\n *\r\n */\n\n\ntoast.onChange = function (callback) {\n  if (isFn(callback)) {\n    eventManager.on(4\n    /* Change */\n    , callback);\n  }\n\n  return function () {\n    isFn(callback) && eventManager.off(4\n    /* Change */\n    , callback);\n  };\n};\n/**\r\n * Configure the ToastContainer when lazy mounted\r\n */\n\n\ntoast.configure = function (config) {\n  if (config === void 0) {\n    config = {};\n  }\n\n  lazy = true;\n  containerConfig = config;\n};\n\ntoast.POSITION = POSITION;\ntoast.TYPE = TYPE;\n/**\r\n * Wait until the ToastContainer is mounted to dispatch the toast\r\n * and attach isActive method\r\n */\n\neventManager.on(2\n/* DidMount */\n, function (containerInstance) {\n  latestInstance = containerInstance.containerId || containerInstance;\n  containers.set(latestInstance, containerInstance);\n  queue.forEach(function (item) {\n    eventManager.emit(0\n    /* Show */\n    , item.content, item.options);\n  });\n  queue = [];\n}).on(3\n/* WillUnmount */\n, function (containerInstance) {\n  containers[\"delete\"](containerInstance.containerId || containerInstance);\n\n  if (containers.size === 0) {\n    eventManager.off(0\n    /* Show */\n    ).off(1\n    /* Clear */\n    ).off(5\n    /* ClearWaitingQueue */\n    );\n  }\n\n  if (canUseDom && containerDomNode) {\n    document.body.removeChild(containerDomNode);\n  }\n});\n/**\r\n * `useKeeper` is a helper around `useRef`.\r\n *\r\n * You don't need to access the `.current`property to get the value\r\n * If refresh is set to true. The ref will be updated every render\r\n */\n\nfunction useKeeper(arg, refresh) {\n  if (refresh === void 0) {\n    refresh = false;\n  }\n\n  var ref = React.useRef(arg);\n  React.useEffect(function () {\n    if (refresh) ref.current = arg;\n  });\n  return ref.current;\n}\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'ADD':\n      return [].concat(state, [action.toastId]).filter(function (id) {\n        return id !== action.staleId;\n      });\n\n    case 'REMOVE':\n      return hasToastId(action.toastId) ? state.filter(function (id) {\n        return id !== action.toastId;\n      }) : [];\n  }\n}\n\nfunction useToastContainer(props) {\n  var _useReducer = React.useReducer(function (x) {\n    return x + 1;\n  }, 0),\n      forceUpdate = _useReducer[1];\n\n  var _useReducer2 = React.useReducer(reducer, []),\n      toast = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var containerRef = React.useRef(null);\n  var toastCount = useKeeper(0);\n  var queue = useKeeper([]);\n  var collection = useKeeper({});\n  var instance = useKeeper({\n    toastKey: 1,\n    displayedToast: 0,\n    props: props,\n    containerId: null,\n    isToastActive: isToastActive,\n    getToast: function getToast(id) {\n      return collection[id] || null;\n    }\n  });\n  React.useEffect(function () {\n    instance.containerId = props.containerId;\n    eventManager.cancelEmit(3\n    /* WillUnmount */\n    ).on(0\n    /* Show */\n    , buildToast).on(1\n    /* Clear */\n    , function (toastId) {\n      return containerRef.current && removeToast(toastId);\n    }).on(5\n    /* ClearWaitingQueue */\n    , clearWaitingQueue).emit(2\n    /* DidMount */\n    , instance);\n    return function () {\n      return eventManager.emit(3\n      /* WillUnmount */\n      , instance);\n    };\n  }, []);\n  React.useEffect(function () {\n    instance.isToastActive = isToastActive;\n    instance.displayedToast = toast.length;\n    eventManager.emit(4\n    /* Change */\n    , toast.length, props.containerId);\n  }, [toast]);\n  React.useEffect(function () {\n    instance.props = props;\n  });\n\n  function isToastActive(id) {\n    return toast.indexOf(id) !== -1;\n  }\n\n  function clearWaitingQueue(_ref) {\n    var containerId = _ref.containerId;\n    var _instance$props = instance.props,\n        limit = _instance$props.limit,\n        enableMultiContainer = _instance$props.enableMultiContainer;\n\n    if (limit && (!containerId || instance.containerId === containerId && enableMultiContainer)) {\n      toastCount -= queue.length;\n      queue = [];\n    }\n  }\n\n  function removeToast(toastId) {\n    var queueLen = queue.length;\n    toastCount = hasToastId(toastId) ? toastCount - 1 : toastCount - instance.displayedToast;\n    if (toastCount < 0) toastCount = 0;\n\n    if (queueLen > 0) {\n      var freeSlot = hasToastId(toastId) ? 1 : instance.props.limit;\n\n      if (queueLen === 1 || freeSlot === 1) {\n        instance.displayedToast++;\n        dequeueToast();\n      } else {\n        var toDequeue = freeSlot > queueLen ? queueLen : freeSlot;\n        instance.displayedToast = toDequeue;\n\n        for (var i = 0; i < toDequeue; i++) {\n          dequeueToast();\n        }\n      }\n    }\n\n    dispatch({\n      type: 'REMOVE',\n      toastId: toastId\n    });\n  }\n\n  function dequeueToast() {\n    var _queue$shift = queue.shift(),\n        toastContent = _queue$shift.toastContent,\n        toastProps = _queue$shift.toastProps,\n        staleId = _queue$shift.staleId; // ensure that exit transition has been completed, hence the timeout\n\n\n    setTimeout(function () {\n      appendToast(toastContent, toastProps, staleId);\n    }, 500);\n  }\n  /**\r\n   * check if a container is attached to the dom\r\n   * check for multi-container, build only if associated\r\n   * check for duplicate toastId if no update\r\n   */\n\n\n  function isNotValid(_ref2) {\n    var containerId = _ref2.containerId,\n        toastId = _ref2.toastId,\n        updateId = _ref2.updateId;\n    return !containerRef.current || instance.props.enableMultiContainer && containerId !== instance.props.containerId || instance.isToastActive(toastId) && updateId == null ? true : false;\n  } // this function and all the function called inside needs to rely on ref(`useKeeper`)\n\n\n  function buildToast(content, _ref3) {\n    var delay = _ref3.delay,\n        staleId = _ref3.staleId,\n        options = _objectWithoutPropertiesLoose(_ref3, [\"delay\", \"staleId\"]);\n\n    if (!canBeRendered(content) || isNotValid(options)) return;\n    var toastId = options.toastId,\n        updateId = options.updateId;\n    var props = instance.props,\n        isToastActive = instance.isToastActive;\n\n    var closeToast = function closeToast() {\n      return removeToast(toastId);\n    };\n\n    var isNotAnUpdate = !isToastActive(toastId);\n    if (isNotAnUpdate) toastCount++;\n    var toastProps = {\n      toastId: toastId,\n      updateId: updateId,\n      key: options.key || instance.toastKey++,\n      type: options.type,\n      closeToast: closeToast,\n      closeButton: options.closeButton,\n      rtl: props.rtl,\n      position: options.position || props.position,\n      transition: options.transition || props.transition,\n      className: parseClassName(options.className || props.toastClassName),\n      bodyClassName: parseClassName(options.bodyClassName || props.bodyClassName),\n      style: options.style || props.toastStyle,\n      bodyStyle: options.bodyStyle || props.bodyStyle,\n      onClick: options.onClick || props.onClick,\n      pauseOnHover: isBool(options.pauseOnHover) ? options.pauseOnHover : props.pauseOnHover,\n      pauseOnFocusLoss: isBool(options.pauseOnFocusLoss) ? options.pauseOnFocusLoss : props.pauseOnFocusLoss,\n      draggable: isBool(options.draggable) ? options.draggable : props.draggable,\n      draggablePercent: isNum(options.draggablePercent) ? options.draggablePercent : props.draggablePercent,\n      closeOnClick: isBool(options.closeOnClick) ? options.closeOnClick : props.closeOnClick,\n      progressClassName: parseClassName(options.progressClassName || props.progressClassName),\n      progressStyle: options.progressStyle || props.progressStyle,\n      autoClose: getAutoCloseDelay(options.autoClose, props.autoClose),\n      hideProgressBar: isBool(options.hideProgressBar) ? options.hideProgressBar : props.hideProgressBar,\n      progress: options.progress,\n      role: isStr(options.role) ? options.role : props.role,\n      deleteToast: function deleteToast() {\n        removeFromCollection(toastId);\n      }\n    };\n    if (isFn(options.onOpen)) toastProps.onOpen = options.onOpen;\n    if (isFn(options.onClose)) toastProps.onClose = options.onClose;\n    var closeButton = props.closeButton;\n\n    if (options.closeButton === false || canBeRendered(options.closeButton)) {\n      closeButton = options.closeButton;\n    } else if (options.closeButton === true) {\n      closeButton = canBeRendered(props.closeButton) ? props.closeButton : true;\n    }\n\n    toastProps.closeButton = closeButton;\n    var toastContent = content;\n\n    if (React.isValidElement(content) && !isStr(content.type)) {\n      toastContent = React.cloneElement(content, {\n        closeToast: closeToast\n      });\n    } else if (isFn(content)) {\n      toastContent = content({\n        closeToast: closeToast\n      });\n    } // not handling limit + delay by design. Waiting for user feedback first\n\n\n    if (props.limit && props.limit > 0 && toastCount > props.limit && isNotAnUpdate) {\n      queue.push({\n        toastContent: toastContent,\n        toastProps: toastProps,\n        staleId: staleId\n      });\n    } else if (isNum(delay) && delay > 0) {\n      setTimeout(function () {\n        appendToast(toastContent, toastProps, staleId);\n      }, delay);\n    } else {\n      appendToast(toastContent, toastProps, staleId);\n    }\n  }\n\n  function appendToast(content, toastProps, staleId) {\n    var toastId = toastProps.toastId;\n    collection[toastId] = {\n      content: content,\n      props: toastProps\n    };\n    dispatch({\n      type: 'ADD',\n      toastId: toastId,\n      staleId: staleId\n    });\n  }\n\n  function removeFromCollection(toastId) {\n    delete collection[toastId];\n    forceUpdate();\n  }\n\n  function getToastToRender(cb) {\n    var toastToRender = {};\n    var toastList = props.newestOnTop ? Object.keys(collection).reverse() : Object.keys(collection);\n\n    for (var i = 0; i < toastList.length; i++) {\n      var _toast = collection[toastList[i]];\n      var position = _toast.props.position;\n      toastToRender[position] || (toastToRender[position] = []);\n      toastToRender[position].push(_toast);\n    }\n\n    return Object.keys(toastToRender).map(function (p) {\n      return cb(p, toastToRender[p]);\n    });\n  }\n\n  return {\n    getToastToRender: getToastToRender,\n    collection: collection,\n    containerRef: containerRef,\n    isToastActive: isToastActive\n  };\n}\n\nfunction getX(e) {\n  return e.targetTouches && e.targetTouches.length >= 1 ? e.targetTouches[0].clientX : e.clientX;\n}\n\nfunction getY(e) {\n  return e.targetTouches && e.targetTouches.length >= 1 ? e.targetTouches[0].clientY : e.clientY;\n}\n\nfunction useToast(props) {\n  var _useState = React.useState(true),\n      isRunning = _useState[0],\n      setIsRunning = _useState[1];\n\n  var _useState2 = React.useState(false),\n      preventExitTransition = _useState2[0],\n      setPreventExitTransition = _useState2[1];\n\n  var toastRef = React.useRef(null);\n  var drag = useKeeper({\n    start: 0,\n    x: 0,\n    y: 0,\n    deltaX: 0,\n    removalDistance: 0,\n    canCloseOnClick: true,\n    canDrag: false,\n    boundingRect: null\n  });\n  var syncProps = useKeeper(props, true);\n  var autoClose = props.autoClose,\n      pauseOnHover = props.pauseOnHover,\n      closeToast = props.closeToast,\n      onClick = props.onClick,\n      closeOnClick = props.closeOnClick;\n  React.useEffect(function () {\n    if (isFn(props.onOpen)) props.onOpen(React.isValidElement(props.children) && props.children.props);\n    return function () {\n      if (isFn(syncProps.onClose)) syncProps.onClose(React.isValidElement(syncProps.children) && syncProps.children.props);\n    };\n  }, []);\n  React.useEffect(function () {\n    props.draggable && bindDragEvents();\n    return function () {\n      props.draggable && unbindDragEvents();\n    };\n  }, [props.draggable]);\n  React.useEffect(function () {\n    props.pauseOnFocusLoss && bindFocusEvents();\n    return function () {\n      props.pauseOnFocusLoss && unbindFocusEvents();\n    };\n  }, [props.pauseOnFocusLoss]);\n\n  function onDragStart(e) {\n    var toast = toastRef.current;\n    drag.canCloseOnClick = true;\n    drag.canDrag = true;\n    drag.boundingRect = toast.getBoundingClientRect();\n    toast.style.transition = '';\n    drag.start = drag.x = getX(e.nativeEvent);\n    drag.removalDistance = toast.offsetWidth * (props.draggablePercent / 100);\n  }\n\n  function onDragTransitionEnd() {\n    if (drag.boundingRect) {\n      var _drag$boundingRect = drag.boundingRect,\n          top = _drag$boundingRect.top,\n          bottom = _drag$boundingRect.bottom,\n          left = _drag$boundingRect.left,\n          right = _drag$boundingRect.right;\n\n      if (props.pauseOnHover && drag.x >= left && drag.x <= right && drag.y >= top && drag.y <= bottom) {\n        pauseToast();\n      } else {\n        playToast();\n      }\n    }\n  }\n\n  function playToast() {\n    setIsRunning(true);\n  }\n\n  function pauseToast() {\n    setIsRunning(false);\n  }\n\n  function bindFocusEvents() {\n    window.addEventListener('focus', playToast);\n    window.addEventListener('blur', pauseToast);\n  }\n\n  function unbindFocusEvents() {\n    window.removeEventListener('focus', playToast);\n    window.removeEventListener('blur', pauseToast);\n  }\n\n  function bindDragEvents() {\n    document.addEventListener('mousemove', onDragMove);\n    document.addEventListener('mouseup', onDragEnd);\n    document.addEventListener('touchmove', onDragMove);\n    document.addEventListener('touchend', onDragEnd);\n  }\n\n  function unbindDragEvents() {\n    document.removeEventListener('mousemove', onDragMove);\n    document.removeEventListener('mouseup', onDragEnd);\n    document.removeEventListener('touchmove', onDragMove);\n    document.removeEventListener('touchend', onDragEnd);\n  }\n\n  function onDragMove(e) {\n    var toast = toastRef.current;\n\n    if (drag.canDrag) {\n      if (isRunning) pauseToast();\n      drag.x = getX(e);\n      drag.deltaX = drag.x - drag.start;\n      drag.y = getY(e); // prevent false positif during a toast click\n\n      if (drag.start !== drag.x) drag.canCloseOnClick = false;\n      toast.style.transform = \"translateX(\" + drag.deltaX + \"px)\";\n      toast.style.opacity = \"\" + (1 - Math.abs(drag.deltaX / drag.removalDistance));\n    }\n  }\n\n  function onDragEnd() {\n    var toast = toastRef.current;\n\n    if (drag.canDrag) {\n      drag.canDrag = false;\n\n      if (Math.abs(drag.deltaX) > drag.removalDistance) {\n        setPreventExitTransition(true);\n        props.closeToast();\n        return;\n      }\n\n      toast.style.transition = 'transform 0.2s, opacity 0.2s';\n      toast.style.transform = 'translateX(0)';\n      toast.style.opacity = '1';\n    }\n  }\n\n  var eventHandlers = {\n    onMouseDown: onDragStart,\n    onTouchStart: onDragStart,\n    onMouseUp: onDragTransitionEnd,\n    onTouchEnd: onDragTransitionEnd\n  };\n\n  if (autoClose && pauseOnHover) {\n    eventHandlers.onMouseEnter = pauseToast;\n    eventHandlers.onMouseLeave = playToast;\n  } // prevent toast from closing when user drags the toast\n\n\n  if (closeOnClick) {\n    eventHandlers.onClick = function (e) {\n      onClick && onClick(e);\n      drag.canCloseOnClick && closeToast();\n    };\n  }\n\n  return {\n    playToast: playToast,\n    pauseToast: pauseToast,\n    isRunning: isRunning,\n    preventExitTransition: preventExitTransition,\n    toastRef: toastRef,\n    eventHandlers: eventHandlers\n  };\n}\n\nexports.Bounce = Bounce;\nexports.Flip = Flip;\nexports.Slide = Slide;\nexports.ToastContainer = ToastContainer;\nexports.Zoom = Zoom;\nexports.collapseToast = collapseToast;\nexports.cssTransition = cssTransition;\nexports.toast = toast;\nexports.useToast = useToast;\nexports.useToastContainer = useToastContainer;","map":{"version":3,"sources":["../src/core/eventManager.ts","../src/utils/propValidator.ts","../src/utils/constant.ts","../src/utils/collapseToast.ts","../src/utils/cssTransition.tsx","../src/components/CloseButton.tsx","../src/components/ProgressBar.tsx","../src/components/Toast.tsx","../src/components/Transitions.tsx","../src/components/ToastPositioner.tsx","../src/components/ToastContainer.tsx","../src/core/toast.tsx","../src/hooks/useKeeper.ts","../src/hooks/toastContainerReducer.ts","../src/hooks/useToastContainer.ts","../src/hooks/useToast.ts"],"names":["eventManager","list","emitQueue","on","off","cb","cancelEmit","timers","clearTimeout","emit","args","timer","setTimeout","callback","isNum","v","isNaN","isBool","isStr","isFn","parseClassName","objectValues","obj","hasToastId","toastId","getAutoCloseDelay","toastAutoClose","containerAutoClose","canUseDom","window","canBeRendered","content","isValidElement","POSITION","TOP_LEFT","TOP_RIGHT","TOP_CENTER","BOTTOM_LEFT","BOTTOM_RIGHT","BOTTOM_CENTER","TYPE","INFO","SUCCESS","WARNING","ERROR","DEFAULT","DARK","collapseToast","node","done","duration","height","style","requestAnimationFrame","cssTransition","enter","exit","appendPosition","collapse","collapseDuration","Array","enterDuration","exitDuration","children","position","preventExitTransition","props","enterClassName","exitClassName","onEnter","onEntered","onExited","onExit","Transition","timeout","unmountOnExit","CloseButton","closeToast","type","ariaLabel","className","onClick","e","viewBox","fillRule","d","ProgressBar","delay","isRunning","hide","userStyle","controlledProgress","progress","rtl","isIn","animationDuration","animationPlayState","opacity","classNames","cx","animationEvent","React","Toast","toastRef","eventHandlers","useToast","closeButton","autoClose","hideProgressBar","transition","bodyClassName","bodyStyle","progressClassName","progressStyle","updateId","role","deleteToast","cssClasses","appear","nodeRef","id","ref","renderCloseButton","key","Bounce","Slide","Zoom","Flip","ToastPositioner","rest","ToastContainer","getToastToRender","containerRef","isToastActive","useToastContainer","containerId","swag","pointerEvents","toastProps","PropTypes","pauseOnHover","closeOnClick","newestOnTop","toastClassName","draggable","draggablePercent","pauseOnFocusLoss","enableMultiContainer","func","containers","queue","lazy","isAnyContainerMounted","container","getContainer","Math","Date","options","generateToastId","containerDomNode","document","render","getToastId","toast","dispatchToast","mergeOptions","params","getToast","oldOptions","oldContent","nextOptions","config","containerConfig","latestInstance","containerInstance","item","useKeeper","arg","refresh","useRef","useEffect","reducer","state","action","forceUpdate","useReducer","x","dispatch","toastCount","collection","instance","toastKey","displayedToast","removeToast","limit","queueLen","freeSlot","dequeueToast","toDequeue","i","toastContent","staleId","appendToast","isNotValid","isNotAnUpdate","removeFromCollection","cloneElement","toastToRender","toastList","Object","setIsRunning","useState","setPreventExitTransition","drag","start","y","deltaX","removalDistance","canCloseOnClick","canDrag","boundingRect","syncProps","bindDragEvents","unbindDragEvents","bindFocusEvents","unbindFocusEvents","getX","top","bottom","left","right","pauseToast","playToast","getY","onMouseDown","onTouchStart","onMouseUp","onTouchEnd","onDragTransitionEnd"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgEO,IAAMA,YAAY,GAAiB;AACxCC,EAAAA,IAAI,EAAA,aAAE,IADkC,GAClC,EADkC;AAExCC,EAAAA,SAAS,EAAA,aAAE,IAF6B,GAE7B,EAF6B;AAIxCC,EAAAA,EAJwC,EAAA,SAAA,EAAA,CAAA,KAAA,EAAA,QAAA,EAAA;AAKtC,SAAA,IAAA,CAAA,GAAA,CAAA,KAAA,KAAwB,KAAA,IAAA,CAAA,GAAA,CAAA,KAAA,EAAxB,EAAwB,CAAxB;AACA,SAAA,IAAA,CAAA,GAAA,CAAA,KAAA,EAAA,IAAA,CAAA,QAAA;AACA,WAAA,IAAA;AAPsC,GAAA;AAUxCC,EAAAA,GAVwC,EAAA,SAAA,GAAA,CAAA,KAAA,EAAA,QAAA,EAAA;AAWtC,QAAA,QAAA,EAAc;AACZ,UAAMC,EAAE,GAAG,KAAA,IAAA,CAAA,GAAA,CAAA,KAAA,EAAA,MAAA,CAA6B,UAAA,EAAA,EAAE;AAAA,eAAIA,EAAE,KAAN,QAAA;AAA1C,OAAW,CAAX;AACA,WAAA,IAAA,CAAA,GAAA,CAAA,KAAA,EAAA,EAAA;AACA,aAAA,IAAA;AACD;;AACD,SAAA,IAAA,CAAA,QAAA,EAAA,KAAA;AACA,WAAA,IAAA;AAjBsC,GAAA;AAoBxCC,EAAAA,UApBwC,EAAA,SAAA,UAAA,CAAA,KAAA,EAAA;AAqBtC,QAAMC,MAAM,GAAG,KAAA,SAAA,CAAA,GAAA,CAAf,KAAe,CAAf;;AACA,QAAA,MAAA,EAAY;AACVA,MAAAA,MAAM,CAANA,OAAAA,CAAe,UAAA,KAAA,EAAA;AAAA,eAAsBC,YAAY,CAAlC,KAAkC,CAAlC;AAAfD,OAAAA;AACA,WAAA,SAAA,CAAA,QAAA,EAAA,KAAA;AACD;;AAED,WAAA,IAAA;AA3BsC,GAAA;;AA8BxC;;;;;;;;AAQAE,EAAAA,IAtCwC,EAAA,SAAA,IAAA,CAAA,KAAA,EAAA;;;sCAsClBC,IAAAA,GAAAA,IAAAA,KAAAA,CAAAA,IAAAA,GAAAA,CAAAA,GAAAA,IAAAA,GAAAA,CAAAA,GAAAA,CAAAA,C,EAAAA,IAAAA,GAAAA,C,EAAAA,IAAAA,GAAAA,I,EAAAA,IAAAA,E,EAAAA;AAAAA,MAAAA,IAAAA,CAAAA,IAAAA,GAAAA,CAAAA,CAAAA,GAAAA,SAAAA,CAAAA,IAAAA,CAAAA;;;AACpB,SAAA,IAAA,CAAA,GAAA,CAAA,KAAA,KACE,KAAA,IAAA,CAAA,GAAA,CAAA,KAAA,EAAA,OAAA,CAA8B,UAAA,QAAA,EAAA;AAC5B,UAAMC,KAAK,GAAGC,UAAU,CAAC,YAAA;AACvB;AACAC,QAAAA,QAAQ,CAARA,KAAAA,CAAAA,KAAAA,CAAAA,EAAAA,IAAAA;AAFsB,OAAA,EAAxB,CAAwB,CAAxB;AAKA,MAAA,KAAI,CAAJ,SAAA,CAAA,GAAA,CAAA,KAAA,KAA6B,KAAI,CAAJ,SAAA,CAAA,GAAA,CAAA,KAAA,EAA7B,EAA6B,CAA7B;;AACA,MAAA,KAAI,CAAJ,SAAA,CAAA,GAAA,CAAA,KAAA,EAAA,IAAA,CAAA,KAAA;AARJ,KACE,CADF;AAUD;AAjDuC,CAAnC;;SC5DSC,K,CAAMC,C,EAAAA;AACpB,SAAO,OAAA,CAAA,KAAA,QAAA,IAAyB,CAACC,KAAK,CAAtC,CAAsC,CAAtC;AACD;;AAED,SAAgBC,MAAhB,CAAuBF,CAAvB,EAAuBA;AACrB,SAAO,OAAA,CAAA,KAAP,SAAA;AACD;;AAED,SAAgBG,KAAhB,CAAsBH,CAAtB,EAAsBA;AACpB,SAAO,OAAA,CAAA,KAAP,QAAA;AACD;;AAED,SAAgBI,IAAhB,CAAqBJ,CAArB,EAAqBA;AACnB,SAAO,OAAA,CAAA,KAAP,UAAA;AACD;;AAED,SAAgBK,cAAhB,CAA+BL,CAA/B,EAA+BA;AAC7B,SAAO,OAAA,CAAA,KAAA,QAAA,GAAA,CAAA,GAAP,IAAA;AACD;;AAED,SAAgBM,YAAhB,CAAgCC,GAAhC,EAAgCA;AAC9B,SAAO,MAAM,CAAN,IAAA,CAAA,GAAA,EAAA,GAAA,CAAqB,UAAA,GAAA,EAAG;AAAA,WAAIA,GAAG,CAAP,GAAO,CAAP;AAA/B,GAAO,CAAP;AACD;;AAED,SAAgBC,UAAhB,CAA2BC,OAA3B,EAA2BA;AACzB,SAAOA,OAAO,KAAPA,CAAAA,IAAP,OAAA;AACD;;AAED,SAAgBC,iBAAhB,CACEC,cADF,EAEEC,kBAFF,EAEEA;AAEA,SAAOD,cAAc,KAAdA,KAAAA,IACJZ,KAAK,CAALA,cAAK,CAALA,IAAyBY,cAAc,GADnCA,CAAAA,GAAAA,cAAAA,GAAP,kBAAA;AAID;;AAEM,IAAME,SAAS,GAAG,CAAC,EACxB,OAAA,MAAA,KAAA,WAAA,IACAC,MAAM,CADN,QAAA,IAEAA,MAAM,CAANA,QAAAA,CAHK,aAAmB,CAAnB;;AAMP,SAAgBC,aAAhB,CAAiCC,OAAjC,EAAiCA;AAC/B,SACEC,KAAAA,CAAAA,cAAAA,CAAAA,OAAAA,KAA2Bd,KAAK,CAAhCc,OAAgC,CAAhCA,IAA6Cb,IAAI,CAAjDa,OAAiD,CAAjDA,IAA8DlB,KAAK,CADrE,OACqE,CADrE;AAGD;;ACxCM,IAAMmB,QAAQ,GAA8C;AACjEC,EAAAA,QAAQ,EADyD,UAAA;AAEjEC,EAAAA,SAAS,EAFwD,WAAA;AAGjEC,EAAAA,UAAU,EAHuD,YAAA;AAIjEC,EAAAA,WAAW,EAJsD,aAAA;AAKjEC,EAAAA,YAAY,EALqD,cAAA;AAMjEC,EAAAA,aAAa,EAAE;AANkD,CAA5D;AASA,IAAMC,IAAI,GAAwC;AACvDC,EAAAA,IAAI,EADmD,MAAA;AAEvDC,EAAAA,OAAO,EAFgD,SAAA;AAGvDC,EAAAA,OAAO,EAHgD,SAAA;AAIvDC,EAAAA,KAAK,EAJkD,OAAA;AAKvDC,EAAAA,OAAO,EALgD,SAAA;AAMvDC,EAAAA,IAAI,EAAE;AANiD,CAAlD;ACnBP;;;;AAGA,SAAgBC,aAAhB,CACEC,IADF,EAEEC,IAFF,EAGEC;;AAHF,E;MAGEA,QAAAA,KAAAA,KAAAA,C,EAAAA;AAAAA,IAAAA,QAAAA,GAAAA,GAAAA;;;AAEA,MAAMC,MAAM,GAAGH,IAAI,CAAnB,YAAA;AACA,MAAMI,KAAK,GAAGJ,IAAI,CAAlB,KAAA;AAEAK,EAAAA,qBAAqB,CAAC,YAAA;AACpBD,IAAAA,KAAK,CAALA,SAAAA,GAAAA,SAAAA;AACAA,IAAAA,KAAK,CAALA,MAAAA,GAAeD,MAAM,GAArBC,IAAAA;AACAA,IAAAA,KAAK,CAALA,UAAAA,GAAAA,SAAAA,QAAAA,GAAAA,IAAAA;AAEAC,IAAAA,qBAAqB,CAAC,YAAA;AACpBD,MAAAA,KAAK,CAALA,MAAAA,GAAAA,GAAAA;AACAA,MAAAA,KAAK,CAALA,OAAAA,GAAAA,GAAAA;AACAA,MAAAA,KAAK,CAALA,MAAAA,GAAAA,GAAAA;AACAxC,MAAAA,UAAU,CAAC,YAAA;AAAA,eAAMqC,IAAN,EAAA;AAAD,OAAA,EAAVrC,QAAU,CAAVA;AAJFyC,KAAqB,CAArBA;AALFA,GAAqB,CAArBA;AAYD;;SCoBeC,a,CAAAA,I,EAAAA;MACdC,KAAAA,GAAAA,IAAAA,CAAAA,K;MACAC,IAAAA,GAAAA,IAAAA,CAAAA,I;2BACAN,Q;MAAAA,QAAAA,GAAAA,aAAAA,KAAAA,KAAAA,CAAAA,GAAW,GAAXA,GAAW,a;iCACXO,c;MAAAA,cAAAA,GAAAA,mBAAAA,KAAAA,KAAAA,CAAAA,GAAiB,KAAjBA,GAAiB,mB;2BACjBC,Q;MAAAA,QAAAA,GAAAA,aAAAA,KAAAA,KAAAA,CAAAA,GAAW,IAAXA,GAAW,a;mCACXC,gB;MAAAA,gBAAAA,GAAAA,qBAAAA,KAAAA,KAAAA,CAAAA,GAAAA,GAAAA,GAAAA,qB;AAEA,MAAA,aAAA,EAAA,YAAA;;AAEA,MAAIC,KAAK,CAALA,OAAAA,CAAAA,QAAAA,KAA2BV,QAAQ,CAARA,MAAAA,KAA/B,CAAA,EAAsD;AACnDW,IAAAA,aADmD,GACpBX,QADoB,CAAA,CAAA,CACnDW;AAAeC,IAAAA,YADoC,GACpBZ,QADoB,CAAA,CAAA,CACpCY;AADlB,GAAA,MAEO;AACLD,IAAAA,aAAa,GAAGC,YAAY,GAA5BD,QAAAA;AACD;;AAED,SAAO,SAAA,eAAA,CAAA,KAAA,EAAA;QACLE,QAAAA,GAAAA,KAAAA,CAAAA,Q;QACAC,QAAAA,GAAAA,KAAAA,CAAAA,Q;QACAC,qBAAAA,GAAAA,KAAAA,CAAAA,qB;QACAhB,IAAAA,GAAAA,KAAAA,CAAAA,I;QACGiB,KAAAA,GAAAA,6BAAAA,CAAAA,KAAAA,EAAAA,CAAAA,UAAAA,EAAAA,UAAAA,EAAAA,uBAAAA,EAAAA,MAAAA,CAAAA,C;;AAEH,QAAMC,cAAc,GAAGV,cAAc,GAAMF,KAAN,GAAA,IAAMA,GAAN,QAAA,GAArC,KAAA;AACA,QAAMa,aAAa,GAAGX,cAAc,GAAMD,IAAN,GAAA,IAAMA,GAAN,QAAA,GAApC,IAAA;;AAEA,QAAMa,OAAO,GAAG,SAAVA,OAAU,GAAA;AACd,UAAMrB,IAAI,GAAGkB,KAAK,CAALA,OAAAA,CAAb,OAAA;;AACA,UAAA,IAAA,EAAU;AACRlB,QAAAA,IAAI,CAAJA,SAAAA,CAAAA,GAAAA,CAAAA,cAAAA;AACAA,QAAAA,IAAI,CAAJA,KAAAA,CAAAA,iBAAAA,GAAAA,UAAAA;AACAA,QAAAA,IAAI,CAAJA,KAAAA,CAAAA,iBAAAA,GAAkCa,aAAlCb,GAAAA,IAAAA;AACD;AANH,KAAA;;AASA,QAAMsB,SAAS,GAAG,SAAZA,SAAY,GAAA;AAChB,UAAMtB,IAAI,GAAGkB,KAAK,CAALA,OAAAA,CAAb,OAAA;;AACA,UAAA,IAAA,EAAU;AACRlB,QAAAA,IAAI,CAAJA,SAAAA,CAAAA,MAAAA,CAAAA,cAAAA;AACAA,QAAAA,IAAI,CAAJA,KAAAA,CAAAA,OAAAA,GAAAA,EAAAA;AACD;AALH,KAAA;;AAQA,QAAMuB,QAAQ,GAAG,SAAXA,QAAW,GAAA;AACf,UAAMvB,IAAI,GAAGkB,KAAK,CAALA,OAAAA,CAAb,OAAA;;AAEA,UAAA,IAAA,EAAU;AACRlB,QAAAA,IAAI,CAAJA,mBAAAA,CAAAA,cAAAA,EAAAA,QAAAA;AACAU,QAAAA,QAAQ,GAAGX,aAAa,CAAA,IAAA,EAAA,IAAA,EAAhB,gBAAgB,CAAhB,GAAiDE,IAAzDS,EAAAA;AACD;AANH,KAAA;;AASA,QAAMc,MAAM,GAAG,SAATA,MAAS,GAAA;AACb,UAAMxB,IAAI,GAAGkB,KAAK,CAALA,OAAAA,CAAb,OAAA;;AACA,UAAA,IAAA,EAAU;AACRlB,QAAAA,IAAI,CAAJA,SAAAA,CAAAA,GAAAA,CAAAA,aAAAA;AACAA,QAAAA,IAAI,CAAJA,KAAAA,CAAAA,iBAAAA,GAAAA,UAAAA;AACAA,QAAAA,IAAI,CAAJA,KAAAA,CAAAA,iBAAAA,GAAkCc,YAAlCd,GAAAA,IAAAA;AACAA,QAAAA,IAAI,CAAJA,gBAAAA,CAAAA,cAAAA,EAAAA,QAAAA;AACD;AAPH,KAAA;;AAUA,WACE,KAAA,CAAA,aAAA,CAACyB,oBAAAA,CAAD,UAAA,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACMP,KADN,EACMA;AACJQ,MAAAA,OAAO,EACLT,qBAAqB,GACjBP,QAAQ,GAAA,gBAAA,GAAA;;AADS,QAIjB;AACEH,QAAAA,KAAK,EADP,aAAA;AAEEC,QAAAA,IAAI,EAAEE,QAAQ,GACVI,YAAY,GADF,gBAAA,GAEVA,YAAY,GAAA;;;AAJlB,OANFI;AAaJG,MAAAA,OAAO,EAAEA,OAbLH;AAcJI,MAAAA,SAAS,EAAEA,SAdPJ;AAeJM,MAAAA,MAAM,EAAEP,qBAAqB,GAAA,QAAA,GAAcO,MAfvCN;AAgBJS,MAAAA,aAAa,EAAA;AAhBTT,KADN,CAAA,EADF,QACE,CADF;AA9CF,GAAA;AAsED;;SCzHeU,W,CAAAA,I,EAAAA;MACdC,UAAAA,GAAAA,IAAAA,CAAAA,U;MACAC,IAAAA,GAAAA,IAAAA,CAAAA,I;4BACAC,S;MAAAA,SAAAA,GAAAA,cAAAA,KAAAA,KAAAA,CAAAA,GAAY,OAAZA,GAAY,c;AAEZ,SACE,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AACEC,IAAAA,SAAS,EAAK;;AAAA,MAAL,iBAAK,GAAuC;;AAAvC,MAAL,kBAAK,GAA+EF,IAD/F;AAEEA,IAAAA,IAAI,EAAC,QAFP;AAGEG,IAAAA,OAAO,EAAE,SAAA,OAAA,CAAA,CAAA,EAAC;AACRC,MAAAA,CAAC,CAADA,eAAAA;AACAL,MAAAA,UAAU,CAAVA,CAAU,CAAVA;AACD,KANH;kBAOcE;AAPd,GAAA,EASE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;mBAAiB,MAAjB;AAAwBI,IAAAA,OAAO,EAAC;AAAhC,GAAA,EACE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACEC,IAAAA,QAAQ,EAAC,SADX;AAEEC,IAAAA,CAAC,EAAC;AAFJ,GAAA,CADF,CATF,CADF;AAkBD;;SC8BeC,W,CAAAA,I,EAAAA;;;MACdC,KAAAA,GAAAA,IAAAA,CAAAA,K;MACAC,SAAAA,GAAAA,IAAAA,CAAAA,S;MACAX,UAAAA,GAAAA,IAAAA,CAAAA,U;MACAC,IAAAA,GAAAA,IAAAA,CAAAA,I;MACAW,IAAAA,GAAAA,IAAAA,CAAAA,I;MACAT,SAAAA,GAAAA,IAAAA,CAAAA,S;MACOU,SAAAA,GAAAA,IAAAA,CAAPtC,K;MACAuC,kBAAAA,GAAAA,IAAAA,CAAAA,kB;MACAC,QAAAA,GAAAA,IAAAA,CAAAA,Q;MACAC,GAAAA,GAAAA,IAAAA,CAAAA,G;MACAC,IAAAA,GAAAA,IAAAA,CAAAA,I;;AAEA,MAAM1C,KAAK,GAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA;AAET2C,IAAAA,iBAAiB,EAAKR,KAAL,GAFR,IAAA;AAGTS,IAAAA,kBAAkB,EAAER,SAAS,GAAA,SAAA,GAHpB,QAAA;AAITS,IAAAA,OAAO,EAAER,IAAI,GAAA,CAAA,GAAO;AAJX,GAAA,CAAX;;AAOA,MAAA,kBAAA,EAAwBrC,KAAK,CAALA,SAAAA,GAAAA,YAAAA,QAAAA,GAAAA,GAAAA;AAExB,MAAM8C,UAAU,GAAGC,EAAE,CAChB;;AAAA,IADgB,gBAAA,EAEnBR,kBAAkB,GACX;;AAAA,IADW,4BAAA,GAEX;;AAAA,IAJY,0BAAA,EAKhB;;AAAA,IALgB,kBAKhB,GALgB,IAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,CAOb;;AAAA,IAPa,qBAAA,CAAA,GAAA,GAAA,EAAA,GAAA,GAArB,SAAqB,CAArB,CAtBcL,CAsBd;AAaA;AACA;;AACA,MAAMc,cAAc,IAAA,eAAA,GAAA,EAAA,EAAA,eAAA,CACjBT,kBAAkB,IAAIC,QAAS,IAA/BD,CAAAA,GAAAA,iBAAAA,GADiB,gBAAA,CAAA,GAIhBA,kBAAkB,IAAIC,QAAS,GAA/BD,CAAAA,GAAAA,IAAAA,GAEI,YAAA;AACEG,IAAAA,IAAI,IAAIjB,UAARiB,EAAAA;AAPU,GAAA,EAApB,eAAoB,CAApB;AAWA,SAAOO,KAAAA,CAAAA,aAAAA,CAAAA,KAAAA,EAAAA,MAAAA,CAAAA,MAAAA,CAAAA;AAAKrB,IAAAA,SAAS,EAAEkB,UAAhBG;AAA4BjD,IAAAA,KAAK,EAAEA;AAAnCiD,GAAAA,EAAP,cAAOA,CAAAA,CAAP;AACD;;AAEDf,WAAW,CAAXA,YAAAA,GAA2B;AACzBR,EAAAA,IAAI,EAAEtC,IAAI,CADe,OAAA;AAEzBiD,EAAAA,IAAI,EAAE;AAFmB,CAA3BH;;AC1GO,IAAMgB,KAAK,GAAyB,SAA9BA,KAA8B,CAAA,KAAA,EAAK;;;kBAM1CG,QAAQ,CAAA,KAAA,C;MAJVjB,SAAAA,GAAAA,SAAAA,CAAAA,S;MACAvB,qBAAAA,GAAAA,SAAAA,CAAAA,qB;MACAsC,QAAAA,GAAAA,SAAAA,CAAAA,Q;MACAC,aAAAA,GAAAA,SAAAA,CAAAA,a;;MAGAE,WAAAA,GAqBExC,KAAAA,CArBFwC,W;MACA3C,QAAAA,GAoBEG,KAAAA,CApBFH,Q;MACA4C,SAAAA,GAmBEzC,KAAAA,CAnBFyC,S;MACA1B,OAAAA,GAkBEf,KAAAA,CAlBFe,O;MACAH,IAAAA,GAiBEZ,KAAAA,CAjBFY,I;MACA8B,eAAAA,GAgBE1C,KAAAA,CAhBF0C,e;MACA/B,UAAAA,GAeEX,KAAAA,CAfFW,U;MACYJ,UAAAA,GAcVP,KAAAA,CAdF2C,U;MACA7C,QAAAA,GAaEE,KAAAA,CAbFF,Q;MACAgB,SAAAA,GAYEd,KAAAA,CAZFc,S;MACA5B,KAAAA,GAWEc,KAAAA,CAXFd,K;MACA0D,aAAAA,GAUE5C,KAAAA,CAVF4C,a;MACAC,SAAAA,GASE7C,KAAAA,CATF6C,S;MACAC,iBAAAA,GAQE9C,KAAAA,CARF8C,iB;MACAC,aAAAA,GAOE/C,KAAAA,CAPF+C,a;MACAC,QAAAA,GAMEhD,KAAAA,CANFgD,Q;MACAC,IAAAA,GAKEjD,KAAAA,CALFiD,I;MACAvB,QAAAA,GAIE1B,KAAAA,CAJF0B,Q;MACAC,GAAAA,GAGE3B,KAAAA,CAHF2B,G;MACArE,OAAAA,GAEE0C,KAAAA,CAFF1C,O;MACA4F,WAAAA,GACElD,KAAAA,CADFkD,W;AAEF,MAAMC,UAAU,GAAGlB,EAAE,CAChB;;AAAA,IADgB,SAAA,EAEhB;;AAAA,IAFgB,WAEhB,GAFgB,IAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,CAIb;;AAAA,IAJa,cAAA,CAAA,GAAA,GAAA,EAAA,GAAA,GAArB,SAAqB,CAArB;AAQA,MAAMR,kBAAkB,GAAG,CAAC,CAA5B,QAAA;;AAEA,WAAA,iBAAA,CAAA,WAAA,EAAA;AACE,QAAI,CAAJ,WAAA,EAAkB,OAAA,IAAA;AAElB,QAAMzB,KAAK,GAAG;AAAEW,MAAAA,UAAU,EAAZ,UAAA;AAAcC,MAAAA,IAAI,EAAJA;AAAd,KAAd;AACA,QAAI3D,IAAI,CAAR,WAAQ,CAAR,EAAuB,OAAOuF,WAAW,CAAlB,KAAkB,CAAlB;AACvB,QAAIL,KAAAA,CAAAA,cAAAA,CAAJ,WAAIA,CAAJ,EACE,OAAOA,KAAAA,CAAAA,YAAAA,CAAAA,WAAAA,EAAP,KAAOA,CAAP;AACH;;AAED,SACE,KAAA,CAAA,aAAA,CAAA,UAAA,EAAA;AACE,UAAInC,KAAK,CAAA,IAAA,CADX;AAEEoD,IAAAA,MAAM,EAAA,IAFR;AAGErE,IAAAA,IAAI,EAAEmE,WAHR;AAIEpD,IAAAA,QAAQ,EAAEA,QAJZ;AAKEC,IAAAA,qBAAqB,EAAEA,qBALzB;AAMEsD,IAAAA,OAAO,EAAEhB;AANX,GAAA,EAQE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,MAAA,CAAA,MAAA,CAAA;AACEiB,IAAAA,EAAE,EAAEhG,OADN;AAEEyD,IAAAA,OAAO,EAAEA,OAFX;AAGED,IAAAA,SAAS,EAAEqC;AAHb,GAAA,EAIMb,aAJN,EAIMA;AACJpD,IAAAA,KAAK,EAAEA,KADHoD;AAEJiB,IAAAA,GAAG,EAAElB;AAFDC,GAJN,CAAA,EAQE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACOtC,KAAK,CAALA,IAAK,CAALA,IAAY;AAAEiD,IAAAA,IAAI,EAAEA;AAAR,GADnB,EACmB;AACjBnC,IAAAA,SAAS,EAAEmB,EAAE,CAAI;;AAAA,MAAJ,cAAA,EAAA,aAAA,CADI;AAEjB/C,IAAAA,KAAK,EAAE2D;AAFU,GADnB,CAAA,EARF,QAQE,CARF,EAeGW,iBAAiB,CAfpB,WAeoB,CAfpB,EAgBG,CAACf,SAAS,IAAV,kBAAA,KACC,KAAA,CAAA,aAAA,CAAA,WAAA,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACO,QAAQ,IAAI,CAAZ,kBAAA,GACD;AAAEgB,IAAAA,GAAG,EAAA,QAAQT;AAAb,GADC,GAED,EAHN,EAGM;AACJrB,IAAAA,GAAG,EAAEA,GADD;AAEJN,IAAAA,KAAK,EAAEoB,SAFH;AAGJnB,IAAAA,SAAS,EAAEA,SAHP;AAIJM,IAAAA,IAAI,EAAE5B,KAAK,CAAA,IAAA,CAJP;AAKJW,IAAAA,UAAU,EAAEA,UALR;AAMJY,IAAAA,IAAI,EAAEmB,eANF;AAOJ9B,IAAAA,IAAI,EAAEA,IAPF;AAQJ1B,IAAAA,KAAK,EAAE6D,aARH;AASJjC,IAAAA,SAAS,EAAEgC,iBATP;AAUJrB,IAAAA,kBAAkB,EAAEA,kBAVhB;AAWJC,IAAAA,QAAQ,EAAEA;AAXN,GAHN,CAAA,CAjBJ,CARF,CADF;AAjDK,CAAA;;ICNDgC,MAAM,GAAA,aAAGtE,aAAa,CAAC;AAC3BC,EAAAA,KAAK,EAAK;;AAAA,IADiB,gBAAA;AAE3BC,EAAAA,IAAI,EAAK;;AAAA,IAFkB,eAAA;AAG3BC,EAAAA,cAAc,EAAE;AAHW,CAAD,C;AAM5B,IAAMoE,KAAK,GAAA,aAAGvE,aAAa,CAAC;AAC1BC,EAAAA,KAAK,EAAK;;AAAA,IADgB,eAAA;AAE1BC,EAAAA,IAAI,EAAK;;AAAA,IAFiB,cAAA;AAG1BN,EAAAA,QAAQ,EAAE,CAAA,GAAA,EAHgB,GAGhB,CAHgB;AAI1BO,EAAAA,cAAc,EAAE;AAJU,CAAD,CAA3B;AAOA,IAAMqE,IAAI,GAAA,aAAGxE,aAAa,CAAC;AACzBC,EAAAA,KAAK,EAAK;;AAAA,IADe,cAAA;AAEzBC,EAAAA,IAAI,EAAK;;AAAA,IAAL;AAFqB,CAAD,CAA1B;AAKA,IAAMuE,IAAI,GAAA,aAAGzE,aAAa,CAAC;AACzBC,EAAAA,KAAK,EAAK;;AAAA,IADe,cAAA;AAEzBC,EAAAA,IAAI,EAAK;;AAAA,IAAL;AAFqB,CAAD,CAA1B;;ACfO,IAAMwE,eAAe,GAAmC,SAAlDA,eAAkD,CAAA,IAAA,EAAA;MAC7DjE,QAAAA,GAAAA,IAAAA,CAAAA,Q;MACAiB,SAAAA,GAAAA,IAAAA,CAAAA,S;MACA5B,KAAAA,GAAAA,IAAAA,CAAAA,K;MACG6E,IAAAA,GAAAA,6BAAAA,CAAAA,IAAAA,EAAAA,CAAAA,UAAAA,EAAAA,WAAAA,EAAAA,OAAAA,CAAAA,C,CAJ0D,CAM7D;AACA;;;AACA,SAAOA,IAAI,CAAX,IAAW,CAAX;AAEA,SACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAKjD,IAAAA,SAAS,EAAEA,SAAhB;AAA4B5B,IAAAA,KAAK,EAAEA;AAAnC,GAAA,EACG,KAAA,CAAA,QAAA,CAAA,GAAA,CAAA,QAAA,EAA6B,UAAA,KAAA,EAAK;AAAA,WACjCiD,KAAAA,CAAAA,YAAAA,CAAAA,KAAAA,EADiC,IACjCA,CADiC;AAFvC,GAEK,CADH,CADF;AAVK,CAAA;;ICOM6B,cAAc,GAAkC,SAAhDA,cAAgD,CAAA,KAAA,EAAK;2BACNI,iBAAiB,CAAA,KAAA,C;MAAnEH,gBAAAA,GAAAA,kBAAAA,CAAAA,gB;MAAkBC,YAAAA,GAAAA,kBAAAA,CAAAA,Y;MAAcC,aAAAA,GAAAA,kBAAAA,CAAAA,a;;MAGhCrD,SAAAA,GAAuCd,KAAAA,CAAvCc,S;MAAW5B,KAAAA,GAA4Bc,KAAAA,CAA5Bd,K;MAAOyC,GAAAA,GAAqB3B,KAAAA,CAArB2B,G;MAAK0C,WAAAA,GAAgBrE,KAAAA,CAAhBqE,W;AAE/B,SACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACEd,IAAAA,GAAG,EAAEW,YADP;AAEEpD,IAAAA,SAAS,EAAE;;AAFb;AAGEwC,IAAAA,EAAE,EAAEe;AAHN,GAAA,EAKGJ,gBAAgB,CAAC,UAAA,QAAA,EAAA,SAAA,EAAA;;;AAChB,QAAMK,IAAI,GAAG;AACXxD,MAAAA,SAAS,EAAEmB,EAAE,CACR;;AAAA,QADQ,mBAAA,EAER;;AAAA,QAFQ,qBAER,GAFQ,QAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,CAGL;;AAAA,QAHK,wBAAA,CAAA,GAAA,GAAA,EAAA,GAAA,GAIX/E,cAAc,CALL,SAKK,CAJH,CADF;AAOXgC,MAAAA,KAAK,EACH,SAAS,CAAT,MAAA,KAAA,CAAA,GAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EAAA,KAAA,CAAA,EAAA,EAAA,EAAA;AACgBqF,QAAAA,aAAa,EAAE;AAD/B,OAAA,CAAA,GAAA,QAAA,CAAA,EAAA,EAAA,KAAA;AARS,KAAb;AAaA,WACE,KAAA,CAAA,aAAA,CAAA,eAAA,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAqBD,IAArB,EAAqBA;AAAMb,MAAAA,GAAG,EAAA,eAAe3D;AAAxBwE,KAArB,CAAA,EACG,SAAS,CAAT,GAAA,CAAc,UAAA,IAAA,EAAA;UAAGzG,OAAAA,GAAAA,IAAAA,CAAAA,O;UAAgB2G,UAAAA,GAAAA,IAAAA,CAAPxE,K;AACzB,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACMwE,UADN,EACMA;AACJ,cAAIL,aAAa,CAACK,UAAU,CAAX,OAAA,CADbA;AAEJf,QAAAA,GAAG,EAAA,WAAWe,UAAU,CAACf,GAFrBe;AAGJhC,QAAAA,WAAW,EACTgC,UAAU,CAAVA,WAAAA,KAAAA,IAAAA,GAAAA,WAAAA,GAEIA,UAAU,CAAChC;AANbgC,OADN,CAAA,EADF,OACE,CADF;AAHN,KAEK,CADH,CADF;AApBN,GAMqB,CALnB,CADF;AANK,C;;AAmDoC;AACzC;AACAR,EAAAA,cAAc,CAAdA,SAAAA,GAA2B;AACzB;AACAlE,IAAAA,QAAQ,EAAA,aAAE2E,SAAS,CAATA,KAAAA,EAAAA,aAAgBtH,YAAY,CAFb,QAEa,CAA5BsH,CAFe;AAIzB;AACAhC,IAAAA,SAAS,EAAA,aAAEgC,SAAS,CAATA,SAAAA,CAAoB,CAACA,SAAS,CAAV,IAAA,EAAiBA,SAAS,CALhC,MAKM,CAApBA,CALc;AAOzB;AACAjC,IAAAA,WAAW,EAAA,aAAEiC,SAAS,CAATA,SAAAA,CAAoB,CAC/BA,SAAS,CADsB,IAAA,EAE/BA,SAAS,CAFsB,IAAA,EAG/BA,SAAS,CAXc,IAQQ,CAApBA,CARY;AAazB/B,IAAAA,eAAe,EAAE+B,SAAS,CAbD,IAAA;AAczBC,IAAAA,YAAY,EAAED,SAAS,CAdE,IAAA;AAezBE,IAAAA,YAAY,EAAEF,SAAS,CAfE,IAAA;AAgBzBG,IAAAA,WAAW,EAAEH,SAAS,CAhBG,IAAA;AAiBzB3D,IAAAA,SAAS,EAAE2D,SAAS,CAjBK,MAAA;AAkBzBvF,IAAAA,KAAK,EAAEuF,SAAS,CAlBS,MAAA;AAmBzBI,IAAAA,cAAc,EAAEJ,SAAS,CAnBA,MAAA;AAoBzB7B,IAAAA,aAAa,EAAE6B,SAAS,CApBC,MAAA;AAqBzB3B,IAAAA,iBAAiB,EAAE2B,SAAS,CArBH,MAAA;AAsBzB1B,IAAAA,aAAa,EAAE0B,SAAS,CAtBC,MAAA;AAuBzB9B,IAAAA,UAAU,EAAE8B,SAAS,CAvBI,IAAA;AAwBzB9C,IAAAA,GAAG,EAAE8C,SAAS,CAxBW,IAAA;AAyBzBK,IAAAA,SAAS,EAAEL,SAAS,CAzBK,IAAA;AA0BzBM,IAAAA,gBAAgB,EAAEN,SAAS,CA1BF,MAAA;AA2BzBO,IAAAA,gBAAgB,EAAEP,SAAS,CA3BF,IAAA;AA4BzBQ,IAAAA,oBAAoB,EAAER,SAAS,CA5BN,IAAA;AA6BzBJ,IAAAA,WAAW,EAAA,aAAEI,SAAS,CAATA,SAAAA,CAAoB,CAACA,SAAS,CAAV,MAAA,EAAmBA,SAAS,CA7BpC,MA6BQ,CAApBA,CA7BY;AA8BzBxB,IAAAA,IAAI,EAAEwB,SAAS,CA9BU,MAAA;AA+BzB1D,IAAAA,OAAO,EAAE0D,SAAS,CAACS;AA/BM,GAA3BlB;AAiCD;AAEDA,cAAc,CAAdA,YAAAA,GAA8B;AAC5BlE,EAAAA,QAAQ,EAAE/B,QAAQ,CADU,SAAA;AAE5B4E,EAAAA,UAAU,EAFkB,MAAA;AAG5BhB,EAAAA,GAAG,EAHyB,KAAA;AAI5Bc,EAAAA,SAAS,EAJmB,IAAA;AAK5BC,EAAAA,eAAe,EALa,KAAA;AAM5BF,EAAAA,WAAW,EANiB,WAAA;AAO5BkC,EAAAA,YAAY,EAPgB,IAAA;AAQ5BM,EAAAA,gBAAgB,EARY,IAAA;AAS5BL,EAAAA,YAAY,EATgB,IAAA;AAU5BC,EAAAA,WAAW,EAViB,KAAA;AAW5BE,EAAAA,SAAS,EAXmB,IAAA;AAY5BC,EAAAA,gBAAgB,EAZY,EAAA;AAa5B9B,EAAAA,IAAI,EAAE;AAbsB,CAA9Be;AC7EA,IAAImB,UAAU,GAAA,aAAG,IAAjB,GAAiB,EAAjB;AACA,IAAA,cAAA;AACA,IAAA,gBAAA;AACA,IAAA,eAAA;AACA,IAAIC,KAAK,GAAT,EAAA;AACA,IAAIC,IAAI,GAAR,KAAA;AAEA;;;;AAGA,SAAA,qBAAA,GAAA;AACE,SAAOF,UAAU,CAAVA,IAAAA,GAAP,CAAA;AACD;AAED;;;;;AAGA,SAAA,YAAA,CAAA,WAAA,EAAA;AACE,MAAI,CAACG,qBAAL,EAAA,EAA8B,OAAA,IAAA;AAC9B,SAAOH,UAAU,CAAVA,GAAAA,CAAe,CAAA,WAAA,GAAA,cAAA,GAAtB,WAAOA,CAAP;AACD;AAED;;;;;AAGA,SAAA,QAAA,CAAA,OAAA,EAAA,IAAA,EAAA;MAAiCd,WAAAA,GAAAA,IAAAA,CAAAA,W;AAC/B,MAAMkB,SAAS,GAAGC,YAAY,CAA9B,WAA8B,CAA9B;AACA,MAAI,CAAJ,SAAA,EAAgB,OAAA,IAAA;AAEhB,SAAOD,SAAS,CAATA,QAAAA,CAAP,OAAOA,CAAP;AACD;AAED;;;;;AAGA,SAAA,eAAA,GAAA;AACE,SAAO,CAACE,IAAI,CAAJA,MAAAA,GAAAA,QAAAA,CAAAA,EAAAA,IAA6BC,IAAI,CAAJA,GAAAA,GAAAA,QAAAA,CAA9B,EAA8BA,CAA9B,EAAA,MAAA,CAAA,CAAA,EAAP,EAAO,CAAP;AACD;AAED;;;;;AAGA,SAAA,UAAA,CAAA,OAAA,EAAA;AACE,MAAIC,OAAO,KAAK3I,KAAK,CAAC2I,OAAO,CAAb3I,OAAK,CAALA,IAA0BJ,KAAK,CAAC+I,OAAO,CAAvD,OAA+C,CAApC,CAAX,EAAmE;AACjE,WAAOA,OAAO,CAAd,OAAA;AACD;;AAED,SAAOC,eAAP,EAAA;AACD;AAED;;;;;;AAIA,SAAA,aAAA,CAAA,OAAA,EAAA,OAAA,EAAA;AAIE,MAAIN,qBAAJ,EAAA,EAA6B;AAC3BxJ,IAAAA,YAAY,CAAZA,IAAAA,CAAAA;;AAAAA,MAAAA,OAAAA,EAAAA,OAAAA;AADF,GAAA,MAEO;AACLsJ,IAAAA,KAAK,CAALA,IAAAA,CAAW;AAAEvH,MAAAA,OAAO,EAAT,OAAA;AAAW8H,MAAAA,OAAO,EAAPA;AAAX,KAAXP;;AACA,QAAIC,IAAI,IAAR,SAAA,EAAuB;AACrBA,MAAAA,IAAI,GAAJA,KAAAA;AACAQ,MAAAA,gBAAgB,GAAGC,QAAQ,CAARA,aAAAA,CAAnBD,KAAmBC,CAAnBD;AACAC,MAAAA,QAAQ,CAARA,IAAAA,CAAAA,WAAAA,CAAAA,gBAAAA;AACAC,MAAAA,QAAAA,CAAAA,MAAAA,CAAO5D,KAAAA,CAAAA,aAAAA,CAAAA,cAAAA,EAAAA,MAAAA,CAAAA,MAAAA,CAAAA,EAAAA,EAAD,eAACA,CAAAA,CAAP4D,EAAAA,gBAAAA;AACD;AACF;;AAED,SAAOJ,OAAO,CAAd,OAAA;AACD;AAED;;;;;AAGA,SAAA,YAAA,CAAA,IAAA,EAAA,OAAA,EAAA;AACE,SAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EAAA,OAAA,CAAA,EAAA,EAAA,EAAA;AAEE/E,IAAAA,IAAI,EAAG+E,OAAO,IAAIA,OAAO,CAAnB,IAACA,IAFT,IAAA;AAGErI,IAAAA,OAAO,EAAE0I,UAAU,CAAA,OAAA;AAHrB,GAAA,CAAA;AAKD;;AAED,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAA,OAAA,EAAA,OAAA,EAAA;AAAA,SACZC,aAAa,CAAA,OAAA,EAAUC,YAAY,CAAC7H,IAAI,CAAL,OAAA,EADvB,OACuB,CAAtB,CADD;AAAd,CAAA;;AAGA2H,KAAK,CAALA,OAAAA,GAAgB,UAAA,OAAA,EAAA,OAAA,EAAA;AAAA,SACdC,aAAa,CAAA,OAAA,EAAUC,YAAY,CAAC7H,IAAI,CAAL,OAAA,EADrB,OACqB,CAAtB,CADC;AAAhB2H,CAAAA;;AAGAA,KAAK,CAALA,IAAAA,GAAa,UAAA,OAAA,EAAA,OAAA,EAAA;AAAA,SACXC,aAAa,CAAA,OAAA,EAAUC,YAAY,CAAC7H,IAAI,CAAL,IAAA,EADxB,OACwB,CAAtB,CADF;AAAb2H,CAAAA;;AAGAA,KAAK,CAALA,KAAAA,GAAc,UAAA,OAAA,EAAA,OAAA,EAAA;AAAA,SACZC,aAAa,CAAA,OAAA,EAAUC,YAAY,CAAC7H,IAAI,CAAL,KAAA,EADvB,OACuB,CAAtB,CADD;AAAd2H,CAAAA;;AAGAA,KAAK,CAALA,OAAAA,GAAgB,UAAA,OAAA,EAAA,OAAA,EAAA;AAAA,SACdC,aAAa,CAAA,OAAA,EAAUC,YAAY,CAAC7H,IAAI,CAAL,OAAA,EADrB,OACqB,CAAtB,CADC;AAAhB2H,CAAAA;;AAGAA,KAAK,CAALA,IAAAA,GAAa,UAAA,OAAA,EAAA,OAAA,EAAA;AAAA,SACXC,aAAa,CAAA,OAAA,EAAUC,YAAY,CAAC7H,IAAI,CAAL,IAAA,EADxB,OACwB,CAAtB,CADF;AAAb2H,CAAAA;AAGA;;;;;AAGAA,KAAK,CAALA,IAAAA,GAAaA,KAAK,CAAlBA,OAAAA;AAEA;;;;AAGAA,KAAK,CAALA,OAAAA,GAAgB,UAAA,EAAA,EAAA;AAAA,SACdX,qBAAqB,MAAM,YAAY,CAAZ,IAAA,CAAA;;AAAA,IADb,EACa,CADb;AAAhBW,CAAAA;AAGA;;;;;AAGAA,KAAK,CAALA,iBAAAA,GAA0B,UAAA,MAAA,EAAA;AAAA,MAACG,MAAD,KAAA,KAAA,CAAA,EAAA;AAACA,IAAAA,MAAD,GAAA,EAACA;AAAD;;AAAA,SACxBd,qBAAqB,MAAM,YAAY,CAAZ,IAAA,CAAA;;AAAA,IADH,MACG,CADH;AAA1BW,CAAAA;AAGA;;;;;AAGAA,KAAK,CAALA,QAAAA,GAAiB,UAAA,EAAA,EAAA;AACf,MAAI9B,aAAa,GAAjB,KAAA;AAEAgB,EAAAA,UAAU,CAAVA,OAAAA,CAAmB,UAAA,SAAA,EAAS;AAC1B,QAAII,SAAS,CAATA,aAAAA,IAA2BA,SAAS,CAATA,aAAAA,CAA/B,EAA+BA,CAA/B,EAA4D;AAC1DpB,MAAAA,aAAa,GAAbA,IAAAA;AACD;AAHHgB,GAAAA;AAMA,SAAA,aAAA;AATFc,CAAAA;;AAYAA,KAAK,CAALA,MAAAA,GAAe,UAAA,OAAA,EAAA,OAAA,EAAA;MAAcN,OAAAA,KAAAA,KAAAA,C,EAAAA;AAAAA,IAAAA,OAAAA,GAAyB,EAAzBA;GAAd,CACb;AACA;;;AACAjJ,EAAAA,UAAU,CAAC,YAAA;AACT,QAAMuJ,KAAK,GAAGI,QAAQ,CAAA,OAAA,EAAtB,OAAsB,CAAtB;;AACA,QAAA,KAAA,EAAW;AAAA,UACMC,UADN,GAC0CL,KAD1C,CAAA,KAAA;AAAA,UAC2BM,UAD3B,GAC0CN,KAD1C,CAAA,OAAA;;AAGT,UAAMO,WAAW,GAAA,QAAA,CAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EAAA,UAAA,CAAA,EAAA,OAAA,CAAA,EAAA,EAAA,EAAA;AAGflJ,QAAAA,OAAO,EAAEqI,OAAO,CAAPA,OAAAA,IAHM,OAAA;AAIf3C,QAAAA,QAAQ,EAAE4C,eAAe;AAJV,OAAA,CAAjB;;AAOA,UAAIY,WAAW,CAAXA,OAAAA,KAAJ,OAAA,EAAqCA,WAAW,CAAXA,OAAAA,GAAAA,OAAAA;AAErC,UAAM3I,OAAO,GACX,OAAO2I,WAAW,CAAlB,MAAA,KAAA,WAAA,GACIA,WAAW,CADf,MAAA,GADF,UAAA;AAIA,aAAOA,WAAW,CAAlB,MAAA;AAEAN,MAAAA,aAAa,CAAA,OAAA,EAAbA,WAAa,CAAbA;AACD;AArBO,GAAA,EAAVxJ,CAAU,CAAVA;AAHFuJ,CAAAA;AA4BA;;;;;AAGAA,KAAK,CAALA,IAAAA,GAAa,UAAA,EAAA,EAAA;AACXA,EAAAA,KAAK,CAALA,MAAAA,CAAAA,EAAAA,EAAiB;AACfvE,IAAAA,QAAQ,EAAE;AADK,GAAjBuE;AADFA,CAAAA;AAMA;;;;;;AAIAA,KAAK,CAALA,QAAAA,GAAiB,UAAA,QAAA,EAAA;AACf,MAAIhJ,IAAI,CAAR,QAAQ,CAAR,EAAoB;AAClBnB,IAAAA,YAAY,CAAZA,EAAAA,CAAAA;;AAAAA,MAAAA,QAAAA;AACD;;AACD,SAAO,YAAA;AACLmB,IAAAA,IAAI,CAAJA,QAAI,CAAJA,IAAkB,YAAY,CAAZ,GAAA,CAAA;;AAAA,MAAlBA,QAAkB,CAAlBA;AADF,GAAA;AAJFgJ,CAAAA;AASA;;;;;AAGAA,KAAK,CAALA,SAAAA,GAAkB,UAAA,MAAA,EAAA;MAACQ,MAAAA,KAAAA,KAAAA,C,EAAAA;AAAAA,IAAAA,MAAAA,GAA8B,EAA9BA;;;AACjBpB,EAAAA,IAAI,GAAJA,IAAAA;AACAqB,EAAAA,eAAe,GAAfA,MAAAA;AAFFT,CAAAA;;AAKAA,KAAK,CAALA,QAAAA,GAAAA,QAAAA;AACAA,KAAK,CAALA,IAAAA,GAAAA,IAAAA;AAEA;;;;;AAIAnK,YAAY,CAAZA,EAAAA,CAAAA;;AAAAA,EACsB,UAAA,iBAAA,EAAA;AAClB6K,EAAAA,cAAc,GAAGC,iBAAiB,CAAjBA,WAAAA,IAAjBD,iBAAAA;AACAxB,EAAAA,UAAU,CAAVA,GAAAA,CAAAA,cAAAA,EAAAA,iBAAAA;AAEAC,EAAAA,KAAK,CAALA,OAAAA,CAAc,UAAA,IAAA,EAAI;AAChBtJ,IAAAA,YAAY,CAAZA,IAAAA,CAAAA;;AAAAA,MAA8B+K,IAAI,CAAlC/K,OAAAA,EAA4C+K,IAAI,CAAhD/K,OAAAA;AADFsJ,GAAAA;AAIAA,EAAAA,KAAK,GAALA,EAAAA;AATJtJ,CAAAA,EAAAA,EAAAA,CAAAA;;AAAAA,EAWyB,UAAA,iBAAA,EAAA;AACrBqJ,EAAAA,UAAU,CAAVA,QAAU,CAAVA,CAAkByB,iBAAiB,CAAjBA,WAAAA,IAAlBzB,iBAAAA;;AAEA,MAAIA,UAAU,CAAVA,IAAAA,KAAJ,CAAA,EAA2B;AACzBrJ,IAAAA,YAAY,CAAZA,GAAAA,CAAAA;;AAAAA,MAAAA,GAAAA,CAAAA;;AAAAA,MAAAA,GAAAA,CAAAA;;AAAAA;AAID;;AAED,MAAI4B,SAAS,IAAb,gBAAA,EAAmC;AACjCoI,IAAAA,QAAQ,CAARA,IAAAA,CAAAA,WAAAA,CAAAA,gBAAAA;AACD;AAvBLhK,CAAAA;AC5NA;;;;;;;AAMA,SAAgBgL,SAAhB,CAA6BC,GAA7B,EAAqCC,OAArC,EAAqCA;MAAAA,OAAAA,KAAAA,KAAAA,C,EAAAA;AAAAA,IAAAA,OAAAA,GAAU,KAAVA;;;AACnC,MAAMzD,GAAG,GAAG0D,KAAAA,CAAAA,MAAAA,CAAZ,GAAYA,CAAZ;AAEAC,EAAAA,KAAAA,CAAAA,SAAAA,CAAU,YAAA;AACR,QAAA,OAAA,EAAa3D,GAAG,CAAHA,OAAAA,GAAAA,GAAAA;AADf2D,GAAAA;AAIA,SAAO3D,GAAG,CAAV,OAAA;AACD;;SCPe4D,O,CAAQC,K,EAAcC,M,EAAAA;AACpC,UAAQA,MAAM,CAAd,IAAA;AACE,SAAA,KAAA;AACE,aAAO,GAAA,MAAA,CAAA,KAAA,EAAA,CAAWA,MAAM,CAAjB,OAAA,CAAA,EAAA,MAAA,CAAkC,UAAA,EAAA,EAAE;AAAA,eAAI/D,EAAE,KAAK+D,MAAM,CAAjB,OAAA;AAA3C,OAAO,CAAP;;AACF,SAAA,QAAA;AACE,aAAO,UAAU,CAACA,MAAM,CAAjB,OAAU,CAAV,GACH,KAAK,CAAL,MAAA,CAAa,UAAA,EAAA,EAAE;AAAA,eAAI/D,EAAE,KAAK+D,MAAM,CAAjB,OAAA;AADZ,OACH,CADG,GAAP,EAAA;AAJJ;AAQD;;SCiCejD,iB,CAAkBpE,K,EAAAA;oBACRuH,KAAAA,CAAAA,UAAAA,CAAW,UAAA,CAAA,EAAC;AAAA,WAAIC,CAAC,GAAL,CAAA;AAAF,GAAVD,EAAU,CAAVA,C;MAAfD,WAAAA,GAAAA,WAAAA,CAAAA,CAAAA,C;;qBACiBC,KAAAA,CAAAA,UAAAA,CAAU,OAAVA,EAAU,EAAVA,C;MAAnBtB,KAAAA,GAAAA,YAAAA,CAAAA,CAAAA,C;MAAOwB,QAAAA,GAAAA,YAAAA,CAAAA,CAAAA,C;;AACd,MAAMvD,YAAY,GAAG+C,KAAAA,CAAAA,MAAAA,CAArB,IAAqBA,CAArB;AACA,MAAIS,UAAU,GAAGZ,SAAS,CAA1B,CAA0B,CAA1B;AACA,MAAI1B,KAAK,GAAG0B,SAAS,CAArB,EAAqB,CAArB;AACA,MAAMa,UAAU,GAAGb,SAAS,CAA5B,EAA4B,CAA5B;AACA,MAAMc,QAAQ,GAAGd,SAAS,CAAoB;AAC5Ce,IAAAA,QAAQ,EADoC,CAAA;AAE5CC,IAAAA,cAAc,EAF8B,CAAA;AAG5C9H,IAAAA,KAAK,EAHuC,KAAA;AAI5CqE,IAAAA,WAAW,EAJiC,IAAA;AAK5CF,IAAAA,aAAa,EAL+B,aAAA;AAM5CkC,IAAAA,QAAQ,EAAE,SAAA,QAAA,CAAA,EAAA,EAAE;AAAA,aAAIsB,UAAU,CAAVA,EAAU,CAAVA,IAAJ,IAAA;AAAA;AANgC,GAApB,CAA1B;AASAT,EAAAA,KAAAA,CAAAA,SAAAA,CAAU,YAAA;AACRU,IAAAA,QAAQ,CAARA,WAAAA,GAAuB5H,KAAK,CAA5B4H,WAAAA;AACA9L,IAAAA,YAAY,CAAZA,UAAAA,CAAAA;;AAAAA,MAAAA,EAAAA,CAAAA;;AAAAA,MAAAA,UAAAA,EAAAA,EAAAA,CAAAA;;AAAAA,MAGmB,UAAA,OAAA,EAAO;AAAA,aAAIoI,YAAY,CAAZA,OAAAA,IAAwB6D,WAAW,CAAvC,OAAuC,CAAvC;AAH1BjM,KAAAA,EAAAA,EAAAA,CAAAA;;AAAAA,MAAAA,iBAAAA,EAAAA,IAAAA,CAAAA;;AAAAA,MAAAA,QAAAA;AAOA,WAAO,YAAA;AAAA,aAAM,YAAY,CAAZ,IAAA,CAAA;;AAAA,QAAN,QAAM,CAAN;AAAP,KAAA;AATO,GAAToL,EAAAA,EAAAA;AAYAA,EAAAA,KAAAA,CAAAA,SAAAA,CAAU,YAAA;AACRU,IAAAA,QAAQ,CAARA,aAAAA,GAAAA,aAAAA;AACAA,IAAAA,QAAQ,CAARA,cAAAA,GAA0B3B,KAAK,CAA/B2B,MAAAA;AACA9L,IAAAA,YAAY,CAAZA,IAAAA,CAAAA;;AAAAA,MAAgCmK,KAAK,CAArCnK,MAAAA,EAA8CkE,KAAK,CAAnDlE,WAAAA;AAHO,GAAToL,EAIG,CAJHA,KAIG,CAJHA;AAMAA,EAAAA,KAAAA,CAAAA,SAAAA,CAAU,YAAA;AACRU,IAAAA,QAAQ,CAARA,KAAAA,GAAAA,KAAAA;AADFV,GAAAA;;AAIA,WAAA,aAAA,CAAA,EAAA,EAAA;AACE,WAAOjB,KAAK,CAALA,OAAAA,CAAAA,EAAAA,MAAsB,CAA7B,CAAA;AACD;;AAED,WAAA,iBAAA,CAAA,IAAA,EAAA;QAA6B5B,WAAAA,GAAAA,IAAAA,CAAAA,W;0BACauD,QAAQ,CAAC5H,K;QAAzCgI,KAAAA,GAAAA,eAAAA,CAAAA,K;QAAO/C,oBAAAA,GAAAA,eAAAA,CAAAA,oB;;AACf,QACE+C,KAAK,KACJ,CAAA,WAAA,IACEJ,QAAQ,CAARA,WAAAA,KAAAA,WAAAA,IAHL,oBACO,CADP,EAIE;AACAF,MAAAA,UAAU,IAAItC,KAAK,CAAnBsC,MAAAA;AACAtC,MAAAA,KAAK,GAALA,EAAAA;AACD;AACF;;AAED,WAAA,WAAA,CAAA,OAAA,EAAA;AACE,QAAM6C,QAAQ,GAAG7C,KAAK,CAAtB,MAAA;AACAsC,IAAAA,UAAU,GAAGrK,UAAU,CAAVA,OAAU,CAAVA,GACTqK,UAAU,GADDrK,CAAAA,GAETqK,UAAU,GAAGE,QAAQ,CAFzBF,cAAAA;AAIA,QAAIA,UAAU,GAAd,CAAA,EAAoBA,UAAU,GAAVA,CAAAA;;AAEpB,QAAIO,QAAQ,GAAZ,CAAA,EAAkB;AAChB,UAAMC,QAAQ,GAAG7K,UAAU,CAAVA,OAAU,CAAVA,GAAAA,CAAAA,GAA0BuK,QAAQ,CAARA,KAAAA,CAA3C,KAAA;;AAEA,UAAIK,QAAQ,KAARA,CAAAA,IAAkBC,QAAQ,KAA9B,CAAA,EAAsC;AACpCN,QAAAA,QAAQ,CAARA,cAAAA;AACAO,QAAAA,YAAY;AAFd,OAAA,MAGO;AACL,YAAMC,SAAS,GAAGF,QAAQ,GAARA,QAAAA,GAAAA,QAAAA,GAAlB,QAAA;AACAN,QAAAA,QAAQ,CAARA,cAAAA,GAAAA,SAAAA;;AAEA,aAAK,IAAIS,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAjB,SAAA,EAA+BA,CAA/B,EAAA,EAAA;AAAoCF,UAAAA,YAAY;AAAhD;AACD;AACF;;AACDV,IAAAA,QAAQ,CAAC;AAAE7G,MAAAA,IAAI,EAAN,QAAA;AAAkBtD,MAAAA,OAAO,EAAPA;AAAlB,KAAD,CAARmK;AACD;;AAED,WAAA,YAAA,GAAA;uBACgDrC,KAAK,CAALA,KAAAA,E;QAAtCkD,YAAAA,GAAAA,YAAAA,CAAAA,Y;QAAc9D,UAAAA,GAAAA,YAAAA,CAAAA,U;QAAY+D,OAAAA,GAAAA,YAAAA,CAAAA,O,CADpC,CACoCA;;;AAGlC7L,IAAAA,UAAU,CAAC,YAAA;AACT8L,MAAAA,WAAW,CAAA,YAAA,EAAA,UAAA,EAAXA,OAAW,CAAXA;AADQ,KAAA,EAAV9L,GAAU,CAAVA;AAGD;AAED;;;;;;;AAKA,WAAA,UAAA,CAAA,KAAA,EAAA;QACE2H,WAAAA,GAAAA,KAAAA,CAAAA,W;QACA/G,OAAAA,GAAAA,KAAAA,CAAAA,O;QACA0F,QAAAA,GAAAA,KAAAA,CAAAA,Q;AAEA,WAAO,CAACkB,YAAY,CAAb,OAAA,IACJ0D,QAAQ,CAARA,KAAAA,CAAAA,oBAAAA,IACCvD,WAAW,KAAKuD,QAAQ,CAARA,KAAAA,CAFb,WAAA,IAGJA,QAAQ,CAARA,aAAAA,CAAAA,OAAAA,KAAmC5E,QAAQ,IAHvC,IAAA,GAAA,IAAA,GAAP,KAAA;AAMD,GAvG+BhD,CAuG/B;;;AAGD,WAAA,UAAA,CAAA,OAAA,EAAA,KAAA,EAAA;QAEIqB,KAAAA,GAAAA,KAAAA,CAAAA,K;QAAOkH,OAAAA,GAAAA,KAAAA,CAAAA,O;QAAY5C,OAAAA,GAAAA,6BAAAA,CAAAA,KAAAA,EAAAA,CAAAA,OAAAA,EAAAA,SAAAA,CAAAA,C;;AAErB,QAAI,CAAC/H,aAAa,CAAd,OAAc,CAAd,IAA2B6K,UAAU,CAAzC,OAAyC,CAAzC,EAAoD;QAE5CnL,OAAAA,GAAsBqI,OAAAA,CAAtBrI,O;QAAS0F,QAAAA,GAAa2C,OAAAA,CAAb3C,Q;QACThD,KAAAA,GAAyB4H,QAAAA,CAAzB5H,K;QAAOmE,aAAAA,GAAkByD,QAAAA,CAAlBzD,a;;AACf,QAAMxD,UAAU,GAAG,SAAbA,UAAa,GAAA;AAAA,aAAMoH,WAAW,CAAjB,OAAiB,CAAjB;AAAnB,KAAA;;AACA,QAAMW,aAAa,GAAG,CAACvE,aAAa,CAApC,OAAoC,CAApC;AAEA,QAAA,aAAA,EAAmBuD,UAAU;AAE7B,QAAMlD,UAAU,GAAe;AAC7BlH,MAAAA,OAAO,EADsB,OAAA;AAE7B0F,MAAAA,QAAQ,EAFqB,QAAA;AAG7BS,MAAAA,GAAG,EAAEkC,OAAO,CAAPA,GAAAA,IAAeiC,QAAQ,CAHC,QAGTA,EAHS;AAI7BhH,MAAAA,IAAI,EAAE+E,OAAO,CAJgB,IAAA;AAK7BhF,MAAAA,UAAU,EALmB,UAAA;AAM7B6B,MAAAA,WAAW,EAAEmD,OAAO,CANS,WAAA;AAO7BhE,MAAAA,GAAG,EAAE3B,KAAK,CAPmB,GAAA;AAQ7BF,MAAAA,QAAQ,EAAE6F,OAAO,CAAPA,QAAAA,IAAqB3F,KAAK,CARP,QAAA;AAS7B2C,MAAAA,UAAU,EAAEgD,OAAO,CAAPA,UAAAA,IAAuB3F,KAAK,CATX,UAAA;AAU7Bc,MAAAA,SAAS,EAAE5D,cAAc,CAACyI,OAAO,CAAPA,SAAAA,IAAqB3F,KAAK,CAVvB,cAUJ,CAVI;AAW7B4C,MAAAA,aAAa,EAAE1F,cAAc,CAC3ByI,OAAO,CAAPA,aAAAA,IAAyB3F,KAAK,CAZH,aAWA,CAXA;AAc7Bd,MAAAA,KAAK,EAAEyG,OAAO,CAAPA,KAAAA,IAAiB3F,KAAK,CAdA,UAAA;AAe7B6C,MAAAA,SAAS,EAAE8C,OAAO,CAAPA,SAAAA,IAAqB3F,KAAK,CAfR,SAAA;AAgB7Be,MAAAA,OAAO,EAAE4E,OAAO,CAAPA,OAAAA,IAAmB3F,KAAK,CAhBJ,OAAA;AAiB7B0E,MAAAA,YAAY,EAAE3H,MAAM,CAAC4I,OAAO,CAAd5I,YAAM,CAANA,GACV4I,OAAO,CADG5I,YAAAA,GAEViD,KAAK,CAnBoB,YAAA;AAoB7BgF,MAAAA,gBAAgB,EAAEjI,MAAM,CAAC4I,OAAO,CAAd5I,gBAAM,CAANA,GACd4I,OAAO,CADO5I,gBAAAA,GAEdiD,KAAK,CAtBoB,gBAAA;AAuB7B8E,MAAAA,SAAS,EAAE/H,MAAM,CAAC4I,OAAO,CAAd5I,SAAM,CAANA,GACP4I,OAAO,CADA5I,SAAAA,GAEPiD,KAAK,CAzBoB,SAAA;AA0B7B+E,MAAAA,gBAAgB,EAAEnI,KAAK,CAAC+I,OAAO,CAAb/I,gBAAK,CAALA,GACd+I,OAAO,CADO/I,gBAAAA,GAEboD,KAAK,CA5BmB,gBAAA;AA6B7B2E,MAAAA,YAAY,EAAE5H,MAAM,CAAC4I,OAAO,CAAd5I,YAAM,CAANA,GACV4I,OAAO,CADG5I,YAAAA,GAEViD,KAAK,CA/BoB,YAAA;AAgC7B8C,MAAAA,iBAAiB,EAAE5F,cAAc,CAC/ByI,OAAO,CAAPA,iBAAAA,IAA6B3F,KAAK,CAjCP,iBAgCI,CAhCJ;AAmC7B+C,MAAAA,aAAa,EAAE4C,OAAO,CAAPA,aAAAA,IAAyB3F,KAAK,CAnChB,aAAA;AAoC7ByC,MAAAA,SAAS,EAAElF,iBAAiB,CAACoI,OAAO,CAAR,SAAA,EAAoB3F,KAAK,CApCxB,SAoCD,CApCC;AAqC7B0C,MAAAA,eAAe,EAAE3F,MAAM,CAAC4I,OAAO,CAAd5I,eAAM,CAANA,GACb4I,OAAO,CADM5I,eAAAA,GAEbiD,KAAK,CAvCoB,eAAA;AAwC7B0B,MAAAA,QAAQ,EAAEiE,OAAO,CAxCY,QAAA;AAyC7B1C,MAAAA,IAAI,EAAEjG,KAAK,CAAC2I,OAAO,CAAb3I,IAAK,CAALA,GAAsB2I,OAAO,CAA7B3I,IAAAA,GAAqCgD,KAAK,CAzCnB,IAAA;AA0C7BkD,MAAAA,WA1C6B,EAAA,SAAA,WAAA,GAAA;AA2C3ByF,QAAAA,oBAAoB,CAApBA,OAAoB,CAApBA;AACD;AA5C4B,KAA/B;AA+CA,QAAI1L,IAAI,CAAC0I,OAAO,CAAhB,MAAQ,CAAR,EAA0BnB,UAAU,CAAVA,MAAAA,GAAoBmB,OAAO,CAA3BnB,MAAAA;AAC1B,QAAIvH,IAAI,CAAC0I,OAAO,CAAhB,OAAQ,CAAR,EAA2BnB,UAAU,CAAVA,OAAAA,GAAqBmB,OAAO,CAA5BnB,OAAAA;AAE3B,QAAIhC,WAAW,GAAGxC,KAAK,CAAvB,WAAA;;AAEA,QAAI2F,OAAO,CAAPA,WAAAA,KAAAA,KAAAA,IAAiC/H,aAAa,CAAC+H,OAAO,CAA1D,WAAkD,CAAlD,EAAyE;AACvEnD,MAAAA,WAAW,GAAGmD,OAAO,CAArBnD,WAAAA;AADF,KAAA,MAEO,IAAImD,OAAO,CAAPA,WAAAA,KAAJ,IAAA,EAAkC;AACvCnD,MAAAA,WAAW,GAAG5E,aAAa,CAACoC,KAAK,CAAnBpC,WAAa,CAAbA,GAAmCoC,KAAK,CAAxCpC,WAAAA,GAAd4E,IAAAA;AACD;;AAEDgC,IAAAA,UAAU,CAAVA,WAAAA,GAAAA,WAAAA;AAEA,QAAI8D,YAAY,GAAhB,OAAA;;AAEA,QAAIxK,KAAAA,CAAAA,cAAAA,CAAAA,OAAAA,KAA2B,CAACd,KAAK,CAACa,OAAO,CAA7C,IAAqC,CAArC,EAAqD;AACnDyK,MAAAA,YAAY,GAAGM,KAAAA,CAAAA,YAAAA,CAAY,OAAZA,EAAsB;AACnCjI,QAAAA,UAAU,EAAVA;AADmC,OAAtBiI,CAAfN;AADF,KAAA,MAIO,IAAIrL,IAAI,CAAR,OAAQ,CAAR,EAAmB;AACxBqL,MAAAA,YAAY,GAAGzK,OAAO,CAAC;AAAE8C,QAAAA,UAAU,EAAVA;AAAF,OAAD,CAAtB2H;AACD,KAjFH,CAiFG;;;AAGD,QACEtI,KAAK,CAALA,KAAAA,IACAA,KAAK,CAALA,KAAAA,GADAA,CAAAA,IAEA0H,UAAU,GAAG1H,KAAK,CAFlBA,KAAAA,IADF,aAAA,EAKE;AACAoF,MAAAA,KAAK,CAALA,IAAAA,CAAW;AAAEkD,QAAAA,YAAY,EAAd,YAAA;AAAgB9D,QAAAA,UAAU,EAA1B,UAAA;AAA4B+D,QAAAA,OAAO,EAAPA;AAA5B,OAAXnD;AANF,KAAA,MAOO,IAAIxI,KAAK,CAALA,KAAK,CAALA,IAAiByE,KAAgB,GAArC,CAAA,EAA2C;AAChD3E,MAAAA,UAAU,CAAC,YAAA;AACT8L,QAAAA,WAAW,CAAA,YAAA,EAAA,UAAA,EAAXA,OAAW,CAAXA;AADQ,OAAA,EAAV9L,KAAU,CAAVA;AADK,KAAA,MAIA;AACL8L,MAAAA,WAAW,CAAA,YAAA,EAAA,UAAA,EAAXA,OAAW,CAAXA;AACD;AACF;;AAED,WAAA,WAAA,CAAA,OAAA,EAAA,UAAA,EAAA,OAAA,EAAA;QAKUlL,OAAAA,GAAYkH,UAAAA,CAAZlH,O;AAERqK,IAAAA,UAAU,CAAVA,OAAU,CAAVA,GAAsB;AACpB9J,MAAAA,OAAO,EADa,OAAA;AAEpBmC,MAAAA,KAAK,EAAEwE;AAFa,KAAtBmD;AAIAF,IAAAA,QAAQ,CAAC;AACP7G,MAAAA,IAAI,EADG,KAAA;AAEPtD,MAAAA,OAAO,EAFA,OAAA;AAGPiL,MAAAA,OAAO,EAAPA;AAHO,KAAD,CAARd;AAKD;;AAED,WAAA,oBAAA,CAAA,OAAA,EAAA;AACE,WAAOE,UAAU,CAAjB,OAAiB,CAAjB;AACAL,IAAAA,WAAW;AACZ;;AAED,WAAA,gBAAA,CAAA,EAAA,EAAA;AAGE,QAAMuB,aAAa,GAAnB,EAAA;AACA,QAAMC,SAAS,GAAG9I,KAAK,CAALA,WAAAA,GACd+I,MAAM,CAANA,IAAAA,CAAAA,UAAAA,EADc/I,OACd+I,EADc/I,GAEd+I,MAAM,CAANA,IAAAA,CAFJ,UAEIA,CAFJ;;AAIA,SAAK,IAAIV,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAGS,SAAS,CAA7B,MAAA,EAAsCT,CAAtC,EAAA,EAA2C;AACzC,UAAMpC,MAAK,GAAG0B,UAAU,CAACmB,SAAS,CAAlC,CAAkC,CAAV,CAAxB;AADyC,UAEjChJ,QAFiC,GAEpBmG,MAAK,CAFe,KAEpBA,CAFoB,QAAA;AAGzC4C,MAAAA,aAAa,CAAbA,QAAa,CAAbA,KAA4BA,aAAa,CAAbA,QAAa,CAAbA,GAA5BA,EAAAA;AAEAA,MAAAA,aAAa,CAAbA,QAAa,CAAbA,CAAAA,IAAAA,CAAAA,MAAAA;AACD;;AAED,WAAQ,MAAM,CAAN,IAAA,CAAA,aAAA,EAAA,GAAA,CAAwD,UAAA,CAAA,EAAC;AAAA,aAC/D1M,EAAE,CAAA,CAAA,EAAI0M,aAAa,CAD4C,CAC5C,CAAjB,CAD6D;AAAjE,KAAQ,CAAR;AAGD;;AAED,SAAO;AACL5E,IAAAA,gBAAgB,EADX,gBAAA;AAEL0D,IAAAA,UAAU,EAFL,UAAA;AAGLzD,IAAAA,YAAY,EAHP,YAAA;AAILC,IAAAA,aAAa,EAAbA;AAJK,GAAP;AAMD;;AC1RD,SAAA,IAAA,CAAA,CAAA,EAAA;AACE,SAAOnD,CAAC,CAADA,aAAAA,IAAmBA,CAAC,CAADA,aAAAA,CAAAA,MAAAA,IAAnBA,CAAAA,GACHA,CAAC,CAADA,aAAAA,CAAAA,CAAAA,EADGA,OAAAA,GAEHA,CAAC,CAFL,OAAA;AAGD;;AAED,SAAA,IAAA,CAAA,CAAA,EAAA;AACE,SAAOA,CAAC,CAADA,aAAAA,IAAmBA,CAAC,CAADA,aAAAA,CAAAA,MAAAA,IAAnBA,CAAAA,GACHA,CAAC,CAADA,aAAAA,CAAAA,CAAAA,EADGA,OAAAA,GAEHA,CAAC,CAFL,OAAA;AAGD;;AAED,SAAgBuB,QAAhB,CAAyBvC,KAAzB,EAAyBA;kBACWiJ,KAAAA,CAAAA,QAAAA,CAAQ,IAARA,C;MAA3B3H,SAAAA,GAAAA,SAAAA,CAAAA,CAAAA,C;MAAW0H,YAAAA,GAAAA,SAAAA,CAAAA,CAAAA,C;;mBACwCC,KAAAA,CAAAA,QAAAA,CAAQ,KAARA,C;MAAnDlJ,qBAAAA,GAAAA,UAAAA,CAAAA,CAAAA,C;MAAuBmJ,wBAAAA,GAAAA,UAAAA,CAAAA,CAAAA,C;;AAC9B,MAAM7G,QAAQ,GAAG4E,KAAAA,CAAAA,MAAAA,CAAjB,IAAiBA,CAAjB;AACA,MAAMkC,IAAI,GAAGrC,SAAS,CAAY;AAChCsC,IAAAA,KAAK,EAD2B,CAAA;AAEhC5B,IAAAA,CAAC,EAF+B,CAAA;AAGhC6B,IAAAA,CAAC,EAH+B,CAAA;AAIhCC,IAAAA,MAAM,EAJ0B,CAAA;AAKhCC,IAAAA,eAAe,EALiB,CAAA;AAMhCC,IAAAA,eAAe,EANiB,IAAA;AAOhCC,IAAAA,OAAO,EAPyB,KAAA;AAQhCC,IAAAA,YAAY,EAAE;AARkB,GAAZ,CAAtB;AAUA,MAAMC,SAAS,GAAG7C,SAAS,CAAA,KAAA,EAA3B,IAA2B,CAA3B;MACQrE,SAAAA,GAA+DzC,KAAAA,CAA/DyC,S;MAAWiC,YAAAA,GAAoD1E,KAAAA,CAApD0E,Y;MAAc/D,UAAAA,GAAsCX,KAAAA,CAAtCW,U;MAAYI,OAAAA,GAA0Bf,KAAAA,CAA1Be,O;MAAS4D,YAAAA,GAAiB3E,KAAAA,CAAjB2E,Y;AAEtDuC,EAAAA,KAAAA,CAAAA,SAAAA,CAAU,YAAA;AACR,QAAIjK,IAAI,CAAC+C,KAAK,CAAd,MAAQ,CAAR,EACEA,KAAK,CAALA,MAAAA,CAAalC,KAAAA,CAAAA,cAAAA,CAAekC,KAAK,CAApBlC,QAAAA,KAAkCkC,KAAK,CAALA,QAAAA,CAA/CA,KAAAA;AAEF,WAAO,YAAA;AACL,UAAI/C,IAAI,CAAC0M,SAAS,CAAlB,OAAQ,CAAR,EACEA,SAAS,CAATA,OAAAA,CACE7L,KAAAA,CAAAA,cAAAA,CAAe6L,SAAS,CAAxB7L,QAAAA,KAAsC6L,SAAS,CAATA,QAAAA,CADxCA,KAAAA;AAFJ,KAAA;AAJO,GAATzC,EAAAA,EAAAA;AAYAA,EAAAA,KAAAA,CAAAA,SAAAA,CAAU,YAAA;AACRlH,IAAAA,KAAK,CAALA,SAAAA,IAAmB4J,cAAnB5J,EAAAA;AACA,WAAO,YAAA;AACLA,MAAAA,KAAK,CAALA,SAAAA,IAAmB6J,gBAAnB7J,EAAAA;AADF,KAAA;AAFO,GAATkH,EAKG,CAAClH,KAAK,CALTkH,SAKG,CALHA;AAOAA,EAAAA,KAAAA,CAAAA,SAAAA,CAAU,YAAA;AACRlH,IAAAA,KAAK,CAALA,gBAAAA,IAA0B8J,eAA1B9J,EAAAA;AACA,WAAO,YAAA;AACLA,MAAAA,KAAK,CAALA,gBAAAA,IAA0B+J,iBAA1B/J,EAAAA;AADF,KAAA;AAFO,GAATkH,EAKG,CAAClH,KAAK,CALTkH,gBAKG,CALHA;;AAOA,WAAA,WAAA,CAAA,CAAA,EAAA;AAGE,QAAMjB,KAAK,GAAG5D,QAAQ,CAAtB,OAAA;AACA8G,IAAAA,IAAI,CAAJA,eAAAA,GAAAA,IAAAA;AACAA,IAAAA,IAAI,CAAJA,OAAAA,GAAAA,IAAAA;AACAA,IAAAA,IAAI,CAAJA,YAAAA,GAAoBlD,KAAK,CAAzBkD,qBAAoBlD,EAApBkD;AACAlD,IAAAA,KAAK,CAALA,KAAAA,CAAAA,UAAAA,GAAAA,EAAAA;AACAkD,IAAAA,IAAI,CAAJA,KAAAA,GAAaA,IAAI,CAAJA,CAAAA,GAASa,IAAI,CAAChJ,CAAC,CAA5BmI,WAA0B,CAA1BA;AACAA,IAAAA,IAAI,CAAJA,eAAAA,GAAuBlD,KAAK,CAALA,WAAAA,IAAqBjG,KAAK,CAALA,gBAAAA,GAA5CmJ,GAAuBlD,CAAvBkD;AACD;;AAED,WAAA,mBAAA,GAAA;AACE,QAAIA,IAAI,CAAR,YAAA,EAAuB;AAAA,UAAA,kBAAA,GACgBA,IAAI,CADpB,YAAA;AAAA,UACbc,GADa,GAAA,kBAAA,CAAA,GAAA;AAAA,UACRC,MADQ,GAAA,kBAAA,CAAA,MAAA;AAAA,UACAC,IADA,GAAA,kBAAA,CAAA,IAAA;AAAA,UACMC,KADN,GAAA,kBAAA,CAAA,KAAA;;AAGrB,UACEpK,KAAK,CAALA,YAAAA,IACAmJ,IAAI,CAAJA,CAAAA,IADAnJ,IAAAA,IAEAmJ,IAAI,CAAJA,CAAAA,IAFAnJ,KAAAA,IAGAmJ,IAAI,CAAJA,CAAAA,IAHAnJ,GAAAA,IAIAmJ,IAAI,CAAJA,CAAAA,IALF,MAAA,EAME;AACAkB,QAAAA,UAAU;AAPZ,OAAA,MAQO;AACLC,QAAAA,SAAS;AACV;AACF;AACF;;AAED,WAAA,SAAA,GAAA;AACEtB,IAAAA,YAAY,CAAZA,IAAY,CAAZA;AACD;;AAED,WAAA,UAAA,GAAA;AACEA,IAAAA,YAAY,CAAZA,KAAY,CAAZA;AACD;;AAED,WAAA,eAAA,GAAA;AACErL,IAAAA,MAAM,CAANA,gBAAAA,CAAAA,OAAAA,EAAAA,SAAAA;AACAA,IAAAA,MAAM,CAANA,gBAAAA,CAAAA,MAAAA,EAAAA,UAAAA;AACD;;AAED,WAAA,iBAAA,GAAA;AACEA,IAAAA,MAAM,CAANA,mBAAAA,CAAAA,OAAAA,EAAAA,SAAAA;AACAA,IAAAA,MAAM,CAANA,mBAAAA,CAAAA,MAAAA,EAAAA,UAAAA;AACD;;AAED,WAAA,cAAA,GAAA;AACEmI,IAAAA,QAAQ,CAARA,gBAAAA,CAAAA,WAAAA,EAAAA,UAAAA;AACAA,IAAAA,QAAQ,CAARA,gBAAAA,CAAAA,SAAAA,EAAAA,SAAAA;AAEAA,IAAAA,QAAQ,CAARA,gBAAAA,CAAAA,WAAAA,EAAAA,UAAAA;AACAA,IAAAA,QAAQ,CAARA,gBAAAA,CAAAA,UAAAA,EAAAA,SAAAA;AACD;;AAED,WAAA,gBAAA,GAAA;AACEA,IAAAA,QAAQ,CAARA,mBAAAA,CAAAA,WAAAA,EAAAA,UAAAA;AACAA,IAAAA,QAAQ,CAARA,mBAAAA,CAAAA,SAAAA,EAAAA,SAAAA;AAEAA,IAAAA,QAAQ,CAARA,mBAAAA,CAAAA,WAAAA,EAAAA,UAAAA;AACAA,IAAAA,QAAQ,CAARA,mBAAAA,CAAAA,UAAAA,EAAAA,SAAAA;AACD;;AAED,WAAA,UAAA,CAAA,CAAA,EAAA;AACE,QAAMG,KAAK,GAAG5D,QAAQ,CAAtB,OAAA;;AAEA,QAAI8G,IAAI,CAAR,OAAA,EAAkB;AAChB,UAAA,SAAA,EAAekB,UAAU;AAEzBlB,MAAAA,IAAI,CAAJA,CAAAA,GAASa,IAAI,CAAbb,CAAa,CAAbA;AACAA,MAAAA,IAAI,CAAJA,MAAAA,GAAcA,IAAI,CAAJA,CAAAA,GAASA,IAAI,CAA3BA,KAAAA;AACAA,MAAAA,IAAI,CAAJA,CAAAA,GAASoB,IAAI,CALG,CAKH,CAAbpB,CALgB,CAAA;;AAQhB,UAAIA,IAAI,CAAJA,KAAAA,KAAeA,IAAI,CAAvB,CAAA,EAA2BA,IAAI,CAAJA,eAAAA,GAAAA,KAAAA;AAE3BlD,MAAAA,KAAK,CAALA,KAAAA,CAAAA,SAAAA,GAAAA,gBAAsCkD,IAAI,CAA1ClD,MAAAA,GAAAA,KAAAA;AACAA,MAAAA,KAAK,CAALA,KAAAA,CAAAA,OAAAA,GAAAA,MAAyB,IACvBR,IAAI,CAAJA,GAAAA,CAAS0D,IAAI,CAAJA,MAAAA,GAAcA,IAAI,CAD7BlD,eACER,CADFQ,CAAAA;AAED;AACF;;AAED,WAAA,SAAA,GAAA;AACE,QAAMA,KAAK,GAAG5D,QAAQ,CAAtB,OAAA;;AACA,QAAI8G,IAAI,CAAR,OAAA,EAAkB;AAChBA,MAAAA,IAAI,CAAJA,OAAAA,GAAAA,KAAAA;;AAEA,UAAI1D,IAAI,CAAJA,GAAAA,CAAS0D,IAAI,CAAb1D,MAAAA,IAAwB0D,IAAI,CAAhC,eAAA,EAAkD;AAChDD,QAAAA,wBAAwB,CAAxBA,IAAwB,CAAxBA;AACAlJ,QAAAA,KAAK,CAALA,UAAAA;AACA;AACD;;AAEDiG,MAAAA,KAAK,CAALA,KAAAA,CAAAA,UAAAA,GAAAA,8BAAAA;AACAA,MAAAA,KAAK,CAALA,KAAAA,CAAAA,SAAAA,GAAAA,eAAAA;AACAA,MAAAA,KAAK,CAALA,KAAAA,CAAAA,OAAAA,GAAAA,GAAAA;AACD;AACF;;AAED,MAAM3D,aAAa,GAA+B;AAChDkI,IAAAA,WAAW,EADqC,WAAA;AAEhDC,IAAAA,YAAY,EAFoC,WAAA;AAGhDC,IAAAA,SAAS,EAHuC,mBAAA;AAIhDC,IAAAA,UAAU,EAAEC;AAJoC,GAAlD;;AAOA,MAAInI,SAAS,IAAb,YAAA,EAA+B;AAC7BH,IAAAA,aAAa,CAAbA,YAAAA,GAAAA,UAAAA;AACAA,IAAAA,aAAa,CAAbA,YAAAA,GAAAA,SAAAA;AACD,GAzJsBtC,CAyJtB;;;AAGD,MAAA,YAAA,EAAkB;AAChBsC,IAAAA,aAAa,CAAbA,OAAAA,GAAwB,UAAA,CAAA,EAAA;AACtBvB,MAAAA,OAAO,IAAIA,OAAO,CAAlBA,CAAkB,CAAlBA;AACAoI,MAAAA,IAAI,CAAJA,eAAAA,IAAwBxI,UAAxBwI,EAAAA;AAFF7G,KAAAA;AAID;;AAED,SAAO;AACLgI,IAAAA,SAAS,EADJ,SAAA;AAELD,IAAAA,UAAU,EAFL,UAAA;AAGL/I,IAAAA,SAAS,EAHJ,SAAA;AAILvB,IAAAA,qBAAqB,EAJhB,qBAAA;AAKLsC,IAAAA,QAAQ,EALH,QAAA;AAMLC,IAAAA,aAAa,EAAbA;AANK,GAAP;AAQD","sourcesContent":["import {\n  Id,\n  ToastContent,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps\n} from '../types';\nimport { ContainerInstance } from '../hooks';\n\nexport const enum Event {\n  Show,\n  Clear,\n  DidMount,\n  WillUnmount,\n  Change,\n  ClearWaitingQueue\n}\n\ntype OnShowCallback = (\n  content: ToastContent,\n  options: NotValidatedToastProps\n) => void;\ntype OnClearCallback = (id?: Id) => void;\ntype OnClearWaitingQueue = (params: ClearWaitingQueueParams) => void;\ntype OnDidMountCallback = (containerInstance: ContainerInstance) => void;\ntype OnWillUnmountCallback = OnDidMountCallback;\nexport type OnChangeCallback = (\n  toast: number,\n  containerId?: number | string\n) => void;\ntype Callback =\n  | OnShowCallback\n  | OnClearCallback\n  | OnClearWaitingQueue\n  | OnDidMountCallback\n  | OnWillUnmountCallback\n  | OnChangeCallback;\ntype TimeoutId = ReturnType<typeof window.setTimeout>;\n\nexport interface EventManager {\n  list: Map<Event, Callback[]>;\n  emitQueue: Map<Event, TimeoutId[]>;\n  on(event: Event.Show, callback: OnShowCallback): EventManager;\n  on(event: Event.Clear, callback: OnClearCallback): EventManager;\n  on(\n    event: Event.ClearWaitingQueue,\n    callback: OnClearWaitingQueue\n  ): EventManager;\n  on(event: Event.DidMount, callback: OnDidMountCallback): EventManager;\n  on(event: Event.WillUnmount, callback: OnWillUnmountCallback): EventManager;\n  on(event: Event.Change, callback: OnChangeCallback): EventManager;\n  off(event: Event, callback?: Callback): EventManager;\n  cancelEmit(event: Event): EventManager;\n  emit(\n    event: Event.Show,\n    content: React.ReactNode,\n    options: NotValidatedToastProps\n  ): void;\n  emit(event: Event.Clear, id?: string | number): void;\n  emit(event: Event.ClearWaitingQueue, params: ClearWaitingQueueParams): void;\n  emit(event: Event.DidMount, containerInstance: ContainerInstance): void;\n  emit(event: Event.WillUnmount, containerInstance: ContainerInstance): void;\n  emit(event: Event.Change, toast: number, containerId?: number | string): void;\n}\n\nexport const eventManager: EventManager = {\n  list: new Map(),\n  emitQueue: new Map(),\n\n  on(event: Event, callback: Callback) {\n    this.list.has(event) || this.list.set(event, []);\n    this.list.get(event)!.push(callback);\n    return this;\n  },\n\n  off(event, callback) {\n    if (callback) {\n      const cb = this.list.get(event)!.filter(cb => cb !== callback);\n      this.list.set(event, cb);\n      return this;\n    }\n    this.list.delete(event);\n    return this;\n  },\n\n  cancelEmit(event) {\n    const timers = this.emitQueue.get(event);\n    if (timers) {\n      timers.forEach((timer: TimeoutId) => clearTimeout(timer));\n      this.emitQueue.delete(event);\n    }\n\n    return this;\n  },\n\n  /**\n   * Enqueue the event at the end of the call stack\n   * Doing so let the user call toast as follow:\n   * toast('1')\n   * toast('2')\n   * toast('3')\n   * Without setTimemout the code above will not work\n   */\n  emit(event: Event, ...args: any[]) {\n    this.list.has(event) &&\n      this.list.get(event)!.forEach((callback: Callback) => {\n        const timer = setTimeout(() => {\n          // @ts-ignore\n          callback(...args);\n        }, 0);\n\n        this.emitQueue.has(event) || this.emitQueue.set(event, []);\n        this.emitQueue.get(event)!.push(timer);\n      });\n  }\n};\n","import { isValidElement } from 'react';\n\nimport { Id } from '../types';\n\nexport function isNum(v: any): v is Number {\n  return typeof v === 'number' && !isNaN(v);\n}\n\nexport function isBool(v: any): v is Boolean {\n  return typeof v === 'boolean';\n}\n\nexport function isStr(v: any): v is String {\n  return typeof v === 'string';\n}\n\nexport function isFn(v: any): v is Function {\n  return typeof v === 'function';\n}\n\nexport function parseClassName(v: any) {\n  return typeof v === 'string' ? v : null;\n}\n\nexport function objectValues<T>(obj: Record<string, T>) {\n  return Object.keys(obj).map(key => obj[key]);\n}\n\nexport function hasToastId(toastId?: Id) {\n  return toastId === 0 || toastId;\n}\n\nexport function getAutoCloseDelay(\n  toastAutoClose?: false | number,\n  containerAutoClose?: false | number\n) {\n  return toastAutoClose === false ||\n    (isNum(toastAutoClose) && toastAutoClose > 0)\n    ? toastAutoClose\n    : containerAutoClose;\n}\n\nexport const canUseDom = !!(\n  typeof window !== 'undefined' &&\n  window.document &&\n  window.document.createElement\n);\n\nexport function canBeRendered<T>(content: T): boolean {\n  return (\n    isValidElement(content) || isStr(content) || isFn(content) || isNum(content)\n  );\n}\n","import { ToastPosition, TypeOptions } from '../types';\n\ntype KeyOfPosition =\n  | 'TOP_LEFT'\n  | 'TOP_RIGHT'\n  | 'TOP_CENTER'\n  | 'BOTTOM_LEFT'\n  | 'BOTTOM_RIGHT'\n  | 'BOTTOM_CENTER';\n\ntype KeyOfType = 'INFO' | 'SUCCESS' | 'WARNING' | 'ERROR' | 'DEFAULT' | 'DARK';\n\nexport const POSITION: { [key in KeyOfPosition]: ToastPosition } = {\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n  TOP_CENTER: 'top-center',\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  BOTTOM_CENTER: 'bottom-center'\n};\n\nexport const TYPE: { [key in KeyOfType]: TypeOptions } = {\n  INFO: 'info',\n  SUCCESS: 'success',\n  WARNING: 'warning',\n  ERROR: 'error',\n  DEFAULT: 'default',\n  DARK: 'dark'\n};\n\nexport const enum DEFAULT {\n  COLLAPSE_DURATION = 300,\n  DEBOUNCE_DURATION = 50,\n  CSS_NAMESPACE = 'Toastify'\n}\n","import { DEFAULT } from './constant';\n\n/**\n * Used to collapse toast after exit animation\n */\nexport function collapseToast(\n  node: HTMLElement,\n  done: () => void,\n  duration = DEFAULT.COLLAPSE_DURATION\n) {\n  const height = node.scrollHeight;\n  const style = node.style;\n\n  requestAnimationFrame(() => {\n    style.minHeight = 'initial';\n    style.height = height + 'px';\n    style.transition = `all ${duration}ms`;\n\n    requestAnimationFrame(() => {\n      style.height = '0';\n      style.padding = '0';\n      style.margin = '0';\n      setTimeout(() => done(), duration as number);\n    });\n  });\n}\n","import * as React from 'react';\nimport { Transition } from 'react-transition-group';\nimport { ToastTransitionProps } from '../types';\n\nimport { collapseToast } from './collapseToast';\nimport { DEFAULT } from './constant';\n\nexport interface CSSTransitionProps {\n  /**\n   * Css class to apply when toast enter\n   */\n  enter: string;\n\n  /**\n   * Css class to apply when toast leave\n   */\n  exit: string;\n\n  /**\n   * Define the duration of the transition in ms\n   * You can also pass an array `[enterDuration, exitDuration]`\n   * `Default: 750`\n   */\n  duration?: number | [number, number];\n\n  /**\n   * Append current toast position to the classname.\n   * For instance `myclass--top-center`...\n   * `Default: false`\n   */\n  appendPosition?: boolean;\n\n  /**\n   * Collapse toast smoothly when animation end\n   * `Default: true`\n   */\n  collapse?: boolean;\n\n  /**\n   * Collapse transition duration\n   * `Default: 300`\n   */\n  collapseDuration?: number;\n}\n\nexport function cssTransition({\n  enter,\n  exit,\n  duration = 750,\n  appendPosition = false,\n  collapse = true,\n  collapseDuration = DEFAULT.COLLAPSE_DURATION\n}: CSSTransitionProps) {\n  let enterDuration: number, exitDuration: number;\n\n  if (Array.isArray(duration) && duration.length === 2) {\n    [enterDuration, exitDuration] = duration;\n  } else {\n    enterDuration = exitDuration = duration as number;\n  }\n\n  return function ToastTransition({\n    children,\n    position,\n    preventExitTransition,\n    done,\n    ...props\n  }: ToastTransitionProps) {\n    const enterClassName = appendPosition ? `${enter}--${position}` : enter;\n    const exitClassName = appendPosition ? `${exit}--${position}` : exit;\n\n    const onEnter = () => {\n      const node = props.nodeRef.current;\n      if (node) {\n        node.classList.add(enterClassName);\n        node.style.animationFillMode = 'forwards';\n        node.style.animationDuration = `${enterDuration}ms`;\n      }\n    };\n\n    const onEntered = () => {\n      const node = props.nodeRef.current;\n      if (node) {\n        node.classList.remove(enterClassName);\n        node.style.cssText = '';\n      }\n    };\n\n    const onExited = () => {\n      const node = props.nodeRef.current;\n\n      if (node) {\n        node.removeEventListener('animationend', onExited);\n        collapse ? collapseToast(node, done, collapseDuration) : done();\n      }\n    };\n\n    const onExit = () => {\n      const node = props.nodeRef.current;\n      if (node) {\n        node.classList.add(exitClassName);\n        node.style.animationFillMode = 'forwards';\n        node.style.animationDuration = `${exitDuration}ms`;\n        node.addEventListener('animationend', onExited);\n      }\n    };\n\n    return (\n      <Transition\n        {...props}\n        timeout={\n          preventExitTransition\n            ? collapse\n              ? collapseDuration\n              : DEFAULT.DEBOUNCE_DURATION\n            : {\n                enter: enterDuration,\n                exit: collapse\n                  ? exitDuration + collapseDuration\n                  : exitDuration + DEFAULT.DEBOUNCE_DURATION\n              }\n        }\n        onEnter={onEnter}\n        onEntered={onEntered}\n        onExit={preventExitTransition ? onExited : onExit}\n        unmountOnExit\n      >\n        {children}\n      </Transition>\n    );\n  };\n}\n","import * as React from 'react';\nimport { DEFAULT } from '../utils';\nimport { TypeOptions } from '../types';\n\nexport interface CloseButtonProps {\n  closeToast: (e: React.MouseEvent<HTMLElement>) => void;\n  type: TypeOptions;\n  ariaLabel?: string;\n}\n\nexport function CloseButton({\n  closeToast,\n  type,\n  ariaLabel = 'close'\n}: CloseButtonProps) {\n  return (\n    <button\n      className={`${DEFAULT.CSS_NAMESPACE}__close-button ${DEFAULT.CSS_NAMESPACE}__close-button--${type}`}\n      type=\"button\"\n      onClick={e => {\n        e.stopPropagation();\n        closeToast(e);\n      }}\n      aria-label={ariaLabel}\n    >\n      <svg aria-hidden=\"true\" viewBox=\"0 0 14 16\">\n        <path\n          fillRule=\"evenodd\"\n          d=\"M7.71 8.23l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75L1 11.98l3.75-3.75L1 4.48 2.48 3l3.75 3.75L9.98 3l1.48 1.48-3.75 3.75z\"\n        />\n      </svg>\n    </button>\n  );\n}\n","import * as React from 'react';\nimport cx from 'classnames';\n\nimport { TYPE, DEFAULT } from './../utils';\nimport { TypeOptions } from '../types';\n\nexport interface ProgressBarProps {\n  /**\n   * The animation delay which determine when to close the toast\n   */\n  delay: number;\n\n  /**\n   * Whether or not the animation is running or paused\n   */\n  isRunning: boolean;\n\n  /**\n   * Func to close the current toast\n   */\n  closeToast: () => void;\n\n  /**\n   * Optional type : info, success ...\n   */\n  type: TypeOptions;\n\n  /**\n   * Hide or not the progress bar\n   */\n  hide?: boolean;\n\n  /**\n   * Optionnal className\n   */\n  className?: string | null;\n\n  /**\n   * Optionnal inline style\n   */\n  style?: React.CSSProperties;\n\n  /**\n   * Tell wether or not controlled progress bar is used\n   */\n  controlledProgress?: boolean;\n\n  /**\n   * Controlled progress value\n   */\n  progress?: number | string;\n\n  /**\n   * Support rtl content\n   */\n  rtl?: boolean;\n\n  /**\n   * Tell if the component is visible on screen or not\n   */\n  isIn?: boolean;\n}\n\nexport function ProgressBar({\n  delay,\n  isRunning,\n  closeToast,\n  type,\n  hide,\n  className,\n  style: userStyle,\n  controlledProgress,\n  progress,\n  rtl,\n  isIn\n}: ProgressBarProps) {\n  const style: React.CSSProperties = {\n    ...userStyle,\n    animationDuration: `${delay}ms`,\n    animationPlayState: isRunning ? 'running' : 'paused',\n    opacity: hide ? 0 : 1\n  };\n\n  if (controlledProgress) style.transform = `scaleX(${progress})`;\n\n  const classNames = cx(\n    `${DEFAULT.CSS_NAMESPACE}__progress-bar`,\n    controlledProgress\n      ? `${DEFAULT.CSS_NAMESPACE}__progress-bar--controlled`\n      : `${DEFAULT.CSS_NAMESPACE}__progress-bar--animated`,\n    `${DEFAULT.CSS_NAMESPACE}__progress-bar--${type}`,\n    {\n      [`${DEFAULT.CSS_NAMESPACE}__progress-bar--rtl`]: rtl\n    },\n    className\n  );\n\n  // 🧐 controlledProgress is derived from progress\n  // so if controlledProgress is set\n  // it means that this is also the case for progress\n  const animationEvent = {\n    [controlledProgress && progress! >= 1\n      ? 'onTransitionEnd'\n      : 'onAnimationEnd']:\n      controlledProgress && progress! < 1\n        ? null\n        : () => {\n            isIn && closeToast();\n          }\n  };\n\n  return <div className={classNames} style={style} {...animationEvent} />;\n}\n\nProgressBar.defaultProps = {\n  type: TYPE.DEFAULT,\n  hide: false\n};\n","import * as React from 'react';\nimport cx from 'classnames';\n\nimport { ProgressBar } from './ProgressBar';\nimport { ToastProps } from '../types';\nimport { DEFAULT, isFn } from '../utils';\nimport { useToast } from '../hooks';\n\nexport const Toast: React.FC<ToastProps> = props => {\n  const {\n    isRunning,\n    preventExitTransition,\n    toastRef,\n    eventHandlers\n  } = useToast(props);\n  const {\n    closeButton,\n    children,\n    autoClose,\n    onClick,\n    type,\n    hideProgressBar,\n    closeToast,\n    transition: Transition,\n    position,\n    className,\n    style,\n    bodyClassName,\n    bodyStyle,\n    progressClassName,\n    progressStyle,\n    updateId,\n    role,\n    progress,\n    rtl,\n    toastId,\n    deleteToast\n  } = props;\n  const cssClasses = cx(\n    `${DEFAULT.CSS_NAMESPACE}__toast`,\n    `${DEFAULT.CSS_NAMESPACE}__toast--${type}`,\n    {\n      [`${DEFAULT.CSS_NAMESPACE}__toast--rtl`]: rtl\n    },\n    className\n  );\n  const controlledProgress = !!progress;\n\n  function renderCloseButton(closeButton: any) {\n    if (!closeButton) return null;\n\n    const props = { closeToast, type };\n    if (isFn(closeButton)) return closeButton(props);\n    if (React.isValidElement(closeButton))\n      return React.cloneElement(closeButton, props);\n  }\n\n  return (\n    <Transition\n      in={props.in!}\n      appear\n      done={deleteToast}\n      position={position}\n      preventExitTransition={preventExitTransition}\n      nodeRef={toastRef}\n    >\n      <div\n        id={toastId as string}\n        onClick={onClick}\n        className={cssClasses}\n        {...eventHandlers}\n        style={style}\n        ref={toastRef}\n      >\n        <div\n          {...(props.in && { role: role })}\n          className={cx(`${DEFAULT.CSS_NAMESPACE}__toast-body`, bodyClassName)}\n          style={bodyStyle}\n        >\n          {children}\n        </div>\n        {renderCloseButton(closeButton)}\n        {(autoClose || controlledProgress) && (\n          <ProgressBar\n            {...(updateId && !controlledProgress\n              ? { key: `pb-${updateId}` }\n              : {})}\n            rtl={rtl}\n            delay={autoClose as number}\n            isRunning={isRunning}\n            isIn={props.in}\n            closeToast={closeToast}\n            hide={hideProgressBar}\n            type={type}\n            style={progressStyle}\n            className={progressClassName}\n            controlledProgress={controlledProgress}\n            progress={progress}\n          />\n        )}\n      </div>\n    </Transition>\n  );\n};\n","import { DEFAULT, cssTransition } from '../utils';\n\nconst Bounce = cssTransition({\n  enter: `${DEFAULT.CSS_NAMESPACE}__bounce-enter`,\n  exit: `${DEFAULT.CSS_NAMESPACE}__bounce-exit`,\n  appendPosition: true\n});\n\nconst Slide = cssTransition({\n  enter: `${DEFAULT.CSS_NAMESPACE}__slide-enter`,\n  exit: `${DEFAULT.CSS_NAMESPACE}__slide-exit`,\n  duration: [450, 750],\n  appendPosition: true\n});\n\nconst Zoom = cssTransition({\n  enter: `${DEFAULT.CSS_NAMESPACE}__zoom-enter`,\n  exit: `${DEFAULT.CSS_NAMESPACE}__zoom-exit`\n});\n\nconst Flip = cssTransition({\n  enter: `${DEFAULT.CSS_NAMESPACE}__flip-enter`,\n  exit: `${DEFAULT.CSS_NAMESPACE}__flip-exit`\n});\n\nexport { Bounce, Slide, Zoom, Flip };\n","import * as React from 'react';\nimport { ToastProps } from '../types';\n\ntype ToastPositionerProps = Pick<ToastProps, 'className' | 'style' | 'in'>;\n\nexport const ToastPositioner: React.FC<ToastPositionerProps> = ({\n  children,\n  className,\n  style,\n  ...rest\n}) => {\n  // Monkey patch react-transition-group\n  // As exit transition is broken with strict mode\n  delete rest.in;\n\n  return (\n    <div className={className!} style={style}>\n      {React.Children.map(children, child =>\n        React.cloneElement(child as React.ReactElement<any>, rest)\n      )}\n    </div>\n  );\n};\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport { Toast } from './Toast';\nimport { CloseButton } from './CloseButton';\nimport { Bounce } from './Transitions';\nimport { POSITION, DEFAULT, parseClassName, objectValues } from '../utils';\nimport { useToastContainer } from '../hooks';\nimport { ToastContainerProps, ToastPosition } from '../types';\nimport { ToastPositioner } from './ToastPositioner';\n\nexport const ToastContainer: React.FC<ToastContainerProps> = props => {\n  const { getToastToRender, containerRef, isToastActive } = useToastContainer(\n    props\n  );\n  const { className, style, rtl, containerId } = props;\n\n  return (\n    <div\n      ref={containerRef}\n      className={DEFAULT.CSS_NAMESPACE as string}\n      id={containerId as string}\n    >\n      {getToastToRender((position, toastList) => {\n        const swag = {\n          className: cx(\n            `${DEFAULT.CSS_NAMESPACE}__toast-container`,\n            `${DEFAULT.CSS_NAMESPACE}__toast-container--${position}`,\n            { [`${DEFAULT.CSS_NAMESPACE}__toast-container--rtl`]: rtl },\n            parseClassName(className)\n          ),\n          style:\n            toastList.length === 0\n              ? { ...style, pointerEvents: 'none' }\n              : { ...style }\n        } as any;\n\n        return (\n          <ToastPositioner {...swag} key={`container-${position}`}>\n            {toastList.map(({ content, props: toastProps }) => {\n              return (\n                <Toast\n                  {...toastProps}\n                  in={isToastActive(toastProps.toastId)}\n                  key={`toast-${toastProps.key}`}\n                  closeButton={\n                    toastProps.closeButton === true\n                      ? CloseButton\n                      : toastProps.closeButton\n                  }\n                >\n                  {content}\n                </Toast>\n              );\n            })}\n          </ToastPositioner>\n        );\n      })}\n    </div>\n  );\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  // @ts-ignore\n  ToastContainer.propTypes = {\n    // @ts-ignore\n    position: PropTypes.oneOf(objectValues(POSITION)),\n\n    // @ts-ignore\n    autoClose: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n\n    // @ts-ignore\n    closeButton: PropTypes.oneOfType([\n      PropTypes.node,\n      PropTypes.bool,\n      PropTypes.func\n    ]),\n    hideProgressBar: PropTypes.bool,\n    pauseOnHover: PropTypes.bool,\n    closeOnClick: PropTypes.bool,\n    newestOnTop: PropTypes.bool,\n    className: PropTypes.string,\n    style: PropTypes.object,\n    toastClassName: PropTypes.string,\n    bodyClassName: PropTypes.string,\n    progressClassName: PropTypes.string,\n    progressStyle: PropTypes.object,\n    transition: PropTypes.func,\n    rtl: PropTypes.bool,\n    draggable: PropTypes.bool,\n    draggablePercent: PropTypes.number,\n    pauseOnFocusLoss: PropTypes.bool,\n    enableMultiContainer: PropTypes.bool,\n    containerId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    role: PropTypes.string,\n    onClick: PropTypes.func\n  };\n}\n\nToastContainer.defaultProps = {\n  position: POSITION.TOP_RIGHT as ToastPosition,\n  transition: Bounce,\n  rtl: false,\n  autoClose: 5000,\n  hideProgressBar: false,\n  closeButton: CloseButton,\n  pauseOnHover: true,\n  pauseOnFocusLoss: true,\n  closeOnClick: true,\n  newestOnTop: false,\n  draggable: true,\n  draggablePercent: 80,\n  role: 'alert'\n};\n","import * as React from 'react';\nimport { render } from 'react-dom';\n\nimport { POSITION, TYPE, canUseDom, isStr, isNum, isFn } from '../utils';\nimport { eventManager, OnChangeCallback, Event } from './eventManager';\nimport {\n  ToastContent,\n  ToastOptions,\n  ToastProps,\n  Id,\n  ToastContainerProps,\n  UpdateOptions,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps\n} from '../types';\nimport { ContainerInstance } from 'hooks';\nimport { ToastContainer } from '../components';\n\ninterface EnqueuedToast {\n  content: ToastContent;\n  options: NotValidatedToastProps;\n}\n\nlet containers = new Map<ContainerInstance | Id, ContainerInstance>();\nlet latestInstance: ContainerInstance | Id;\nlet containerDomNode: HTMLElement;\nlet containerConfig: ToastContainerProps;\nlet queue: EnqueuedToast[] = [];\nlet lazy = false;\n\n/**\n * Check whether any container is currently mounted in the DOM\n */\nfunction isAnyContainerMounted() {\n  return containers.size > 0;\n}\n\n/**\n * Get the container by id. Returns the last container declared when no id is given.\n */\nfunction getContainer(containerId?: Id) {\n  if (!isAnyContainerMounted()) return null;\n  return containers.get(!containerId ? latestInstance : containerId);\n}\n\n/**\n * Get the toast by id, given it's in the DOM, otherwise returns null\n */\nfunction getToast(toastId: Id, { containerId }: ToastOptions) {\n  const container = getContainer(containerId);\n  if (!container) return null;\n\n  return container.getToast(toastId);\n}\n\n/**\n * Generate a random toastId\n */\nfunction generateToastId() {\n  return (Math.random().toString(36) + Date.now().toString(36)).substr(2, 10);\n}\n\n/**\n * Generate a toastId or use the one provided\n */\nfunction getToastId(options?: ToastOptions) {\n  if (options && (isStr(options.toastId) || isNum(options.toastId))) {\n    return options.toastId;\n  }\n\n  return generateToastId();\n}\n\n/**\n * If the container is not mounted, the toast is enqueued and\n * the container lazy mounted\n */\nfunction dispatchToast(\n  content: ToastContent,\n  options: NotValidatedToastProps\n): Id {\n  if (isAnyContainerMounted()) {\n    eventManager.emit(Event.Show, content, options);\n  } else {\n    queue.push({ content, options });\n    if (lazy && canUseDom) {\n      lazy = false;\n      containerDomNode = document.createElement('div');\n      document.body.appendChild(containerDomNode);\n      render(<ToastContainer {...containerConfig} />, containerDomNode);\n    }\n  }\n\n  return options.toastId;\n}\n\n/**\n * Merge provided options with the defaults settings and generate the toastId\n */\nfunction mergeOptions(type: string, options?: ToastOptions) {\n  return {\n    ...options,\n    type: (options && options.type) || type,\n    toastId: getToastId(options)\n  } as NotValidatedToastProps;\n}\n\nconst toast = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(content, mergeOptions(TYPE.DEFAULT, options));\n\ntoast.success = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(content, mergeOptions(TYPE.SUCCESS, options));\n\ntoast.info = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(content, mergeOptions(TYPE.INFO, options));\n\ntoast.error = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(content, mergeOptions(TYPE.ERROR, options));\n\ntoast.warning = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(content, mergeOptions(TYPE.WARNING, options));\n\ntoast.dark = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(content, mergeOptions(TYPE.DARK, options));\n\n/**\n * Maybe I should remove warning in favor of warn, I don't know\n */\ntoast.warn = toast.warning;\n\n/**\n * Remove toast programmaticaly\n */\ntoast.dismiss = (id?: Id) =>\n  isAnyContainerMounted() && eventManager.emit(Event.Clear, id);\n\n/**\n * Clear waiting queue when limit is used\n */\ntoast.clearWaitingQueue = (params: ClearWaitingQueueParams = {}) =>\n  isAnyContainerMounted() && eventManager.emit(Event.ClearWaitingQueue, params);\n\n/**\n * return true if one container is displaying the toast\n */\ntoast.isActive = (id: Id) => {\n  let isToastActive = false;\n\n  containers.forEach(container => {\n    if (container.isToastActive && container.isToastActive(id)) {\n      isToastActive = true;\n    }\n  });\n\n  return isToastActive;\n};\n\ntoast.update = (toastId: Id, options: UpdateOptions = {}) => {\n  // if you call toast and toast.update directly nothing will be displayed\n  // this is why I defered the update\n  setTimeout(() => {\n    const toast = getToast(toastId, options as ToastOptions);\n    if (toast) {\n      const { props: oldOptions, content: oldContent } = toast;\n\n      const nextOptions = {\n        ...oldOptions,\n        ...options,\n        toastId: options.toastId || toastId,\n        updateId: generateToastId()\n      } as ToastProps & UpdateOptions;\n\n      if (nextOptions.toastId !== toastId) nextOptions.staleId = toastId;\n\n      const content =\n        typeof nextOptions.render !== 'undefined'\n          ? nextOptions.render\n          : oldContent;\n      delete nextOptions.render;\n\n      dispatchToast(content, nextOptions);\n    }\n  }, 0);\n};\n\n/**\n * Used for controlled progress bar.\n */\ntoast.done = (id: Id) => {\n  toast.update(id, {\n    progress: 1\n  });\n};\n\n/**\n * Track changes. The callback get the number of toast displayed\n *\n */\ntoast.onChange = (callback: OnChangeCallback) => {\n  if (isFn(callback)) {\n    eventManager.on(Event.Change, callback);\n  }\n  return () => {\n    isFn(callback) && eventManager.off(Event.Change, callback);\n  };\n};\n\n/**\n * Configure the ToastContainer when lazy mounted\n */\ntoast.configure = (config: ToastContainerProps = {}) => {\n  lazy = true;\n  containerConfig = config;\n};\n\ntoast.POSITION = POSITION;\ntoast.TYPE = TYPE;\n\n/**\n * Wait until the ToastContainer is mounted to dispatch the toast\n * and attach isActive method\n */\neventManager\n  .on(Event.DidMount, (containerInstance: ContainerInstance) => {\n    latestInstance = containerInstance.containerId || containerInstance;\n    containers.set(latestInstance, containerInstance);\n\n    queue.forEach(item => {\n      eventManager.emit(Event.Show, item.content, item.options);\n    });\n\n    queue = [];\n  })\n  .on(Event.WillUnmount, (containerInstance: ContainerInstance) => {\n    containers.delete(containerInstance.containerId || containerInstance);\n\n    if (containers.size === 0) {\n      eventManager\n        .off(Event.Show)\n        .off(Event.Clear)\n        .off(Event.ClearWaitingQueue);\n    }\n\n    if (canUseDom && containerDomNode) {\n      document.body.removeChild(containerDomNode);\n    }\n  });\n\nexport { toast };\n","import { useRef, useEffect } from 'react';\n\n/**\n * `useKeeper` is a helper around `useRef`.\n *\n * You don't need to access the `.current`property to get the value\n * If refresh is set to true. The ref will be updated every render\n */\nexport function useKeeper<T>(arg: T, refresh = false) {\n  const ref = useRef<T>(arg);\n\n  useEffect(() => {\n    if (refresh) ref.current = arg;\n  });\n\n  return ref.current;\n}\n","import { Id } from '../types';\n\nimport { hasToastId } from '../utils';\n\nexport type State = Array<Id>;\nexport type Action =\n  | { type: 'ADD'; toastId: Id; staleId?: Id }\n  | { type: 'REMOVE'; toastId?: Id };\n\nexport function reducer(state: State, action: Action) {\n  switch (action.type) {\n    case 'ADD':\n      return [...state, action.toastId].filter(id => id !== action.staleId);\n    case 'REMOVE':\n      return hasToastId(action.toastId)\n        ? state.filter(id => id !== action.toastId)\n        : [];\n  }\n}\n","import {\n  useEffect,\n  useRef,\n  useReducer,\n  cloneElement,\n  isValidElement\n} from 'react';\nimport { eventManager, Event } from '../core';\nimport {\n  parseClassName,\n  canBeRendered,\n  isBool,\n  isFn,\n  isNum,\n  isStr,\n  hasToastId,\n  getAutoCloseDelay\n} from '../utils';\n\nimport {\n  Id,\n  ToastContainerProps,\n  ToastProps,\n  ToastContent,\n  Toast,\n  ToastPosition,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps,\n  ToastTransition\n} from '../types';\nimport { useKeeper } from './useKeeper';\nimport { reducer } from './toastContainerReducer';\n\ntype CollectionItem = Record<Id, Toast>;\ntype ToastToRender = Partial<Record<ToastPosition, Toast[]>>;\n\ninterface QueuedToast {\n  toastContent: ToastContent;\n  toastProps: ToastProps;\n  staleId?: Id;\n}\n\nexport interface ContainerInstance {\n  toastKey: number;\n  displayedToast: number;\n  props: ToastContainerProps;\n  containerId?: Id | null;\n  isToastActive: (toastId: Id) => boolean;\n  getToast: (id: Id) => Toast | null;\n}\n\nexport function useToastContainer(props: ToastContainerProps) {\n  const [, forceUpdate] = useReducer(x => x + 1, 0);\n  const [toast, dispatch] = useReducer(reducer, []);\n  const containerRef = useRef(null);\n  let toastCount = useKeeper(0);\n  let queue = useKeeper<QueuedToast[]>([]);\n  const collection = useKeeper<CollectionItem>({});\n  const instance = useKeeper<ContainerInstance>({\n    toastKey: 1,\n    displayedToast: 0,\n    props,\n    containerId: null,\n    isToastActive: isToastActive,\n    getToast: id => collection[id] || null\n  });\n\n  useEffect(() => {\n    instance.containerId = props.containerId;\n    eventManager\n      .cancelEmit(Event.WillUnmount)\n      .on(Event.Show, buildToast)\n      .on(Event.Clear, toastId => containerRef.current && removeToast(toastId))\n      .on(Event.ClearWaitingQueue, clearWaitingQueue)\n      .emit(Event.DidMount, instance);\n\n    return () => eventManager.emit(Event.WillUnmount, instance);\n  }, []);\n\n  useEffect(() => {\n    instance.isToastActive = isToastActive;\n    instance.displayedToast = toast.length;\n    eventManager.emit(Event.Change, toast.length, props.containerId);\n  }, [toast]);\n\n  useEffect(() => {\n    instance.props = props;\n  });\n\n  function isToastActive(id: Id) {\n    return toast.indexOf(id) !== -1;\n  }\n\n  function clearWaitingQueue({ containerId }: ClearWaitingQueueParams) {\n    const { limit, enableMultiContainer } = instance.props;\n    if (\n      limit &&\n      (!containerId ||\n        (instance.containerId === containerId && enableMultiContainer))\n    ) {\n      toastCount -= queue.length;\n      queue = [];\n    }\n  }\n\n  function removeToast(toastId?: Id) {\n    const queueLen = queue.length;\n    toastCount = hasToastId(toastId)\n      ? toastCount - 1\n      : toastCount - instance.displayedToast;\n\n    if (toastCount < 0) toastCount = 0;\n\n    if (queueLen > 0) {\n      const freeSlot = hasToastId(toastId) ? 1 : instance.props.limit!;\n\n      if (queueLen === 1 || freeSlot === 1) {\n        instance.displayedToast++;\n        dequeueToast();\n      } else {\n        const toDequeue = freeSlot > queueLen ? queueLen : freeSlot;\n        instance.displayedToast = toDequeue;\n\n        for (let i = 0; i < toDequeue; i++) dequeueToast();\n      }\n    }\n    dispatch({ type: 'REMOVE', toastId });\n  }\n\n  function dequeueToast() {\n    const { toastContent, toastProps, staleId } = queue.shift() as QueuedToast;\n\n    // ensure that exit transition has been completed, hence the timeout\n    setTimeout(() => {\n      appendToast(toastContent, toastProps, staleId);\n    }, 500);\n  }\n\n  /**\n   * check if a container is attached to the dom\n   * check for multi-container, build only if associated\n   * check for duplicate toastId if no update\n   */\n  function isNotValid({\n    containerId,\n    toastId,\n    updateId\n  }: NotValidatedToastProps) {\n    return !containerRef.current ||\n      (instance.props.enableMultiContainer &&\n        containerId !== instance.props.containerId) ||\n      (instance.isToastActive(toastId) && updateId == null)\n      ? true\n      : false;\n  }\n\n  // this function and all the function called inside needs to rely on ref(`useKeeper`)\n  function buildToast(\n    content: ToastContent,\n    { delay, staleId, ...options }: NotValidatedToastProps\n  ) {\n    if (!canBeRendered(content) || isNotValid(options)) return;\n\n    const { toastId, updateId } = options;\n    const { props, isToastActive } = instance;\n    const closeToast = () => removeToast(toastId);\n    const isNotAnUpdate = !isToastActive(toastId);\n\n    if (isNotAnUpdate) toastCount++;\n\n    const toastProps: ToastProps = {\n      toastId,\n      updateId,\n      key: options.key || instance.toastKey++,\n      type: options.type,\n      closeToast: closeToast,\n      closeButton: options.closeButton,\n      rtl: props.rtl,\n      position: options.position || (props.position as ToastPosition),\n      transition: options.transition || (props.transition as ToastTransition),\n      className: parseClassName(options.className || props.toastClassName),\n      bodyClassName: parseClassName(\n        options.bodyClassName || props.bodyClassName\n      ),\n      style: options.style || props.toastStyle,\n      bodyStyle: options.bodyStyle || props.bodyStyle,\n      onClick: options.onClick || props.onClick,\n      pauseOnHover: isBool(options.pauseOnHover)\n        ? options.pauseOnHover\n        : props.pauseOnHover,\n      pauseOnFocusLoss: isBool(options.pauseOnFocusLoss)\n        ? options.pauseOnFocusLoss\n        : props.pauseOnFocusLoss,\n      draggable: isBool(options.draggable)\n        ? options.draggable\n        : props.draggable,\n      draggablePercent: isNum(options.draggablePercent)\n        ? options.draggablePercent\n        : (props.draggablePercent as number),\n      closeOnClick: isBool(options.closeOnClick)\n        ? options.closeOnClick\n        : props.closeOnClick,\n      progressClassName: parseClassName(\n        options.progressClassName || props.progressClassName\n      ),\n      progressStyle: options.progressStyle || props.progressStyle,\n      autoClose: getAutoCloseDelay(options.autoClose, props.autoClose),\n      hideProgressBar: isBool(options.hideProgressBar)\n        ? options.hideProgressBar\n        : props.hideProgressBar,\n      progress: options.progress,\n      role: isStr(options.role) ? options.role : props.role,\n      deleteToast() {\n        removeFromCollection(toastId);\n      }\n    };\n\n    if (isFn(options.onOpen)) toastProps.onOpen = options.onOpen;\n    if (isFn(options.onClose)) toastProps.onClose = options.onClose;\n\n    let closeButton = props.closeButton;\n\n    if (options.closeButton === false || canBeRendered(options.closeButton)) {\n      closeButton = options.closeButton;\n    } else if (options.closeButton === true) {\n      closeButton = canBeRendered(props.closeButton) ? props.closeButton : true;\n    }\n\n    toastProps.closeButton = closeButton;\n\n    let toastContent = content;\n\n    if (isValidElement(content) && !isStr(content.type)) {\n      toastContent = cloneElement(content, {\n        closeToast\n      });\n    } else if (isFn(content)) {\n      toastContent = content({ closeToast });\n    }\n\n    // not handling limit + delay by design. Waiting for user feedback first\n    if (\n      props.limit &&\n      props.limit > 0 &&\n      toastCount > props.limit &&\n      isNotAnUpdate\n    ) {\n      queue.push({ toastContent, toastProps, staleId });\n    } else if (isNum(delay) && (delay as number) > 0) {\n      setTimeout(() => {\n        appendToast(toastContent, toastProps, staleId);\n      }, delay);\n    } else {\n      appendToast(toastContent, toastProps, staleId);\n    }\n  }\n\n  function appendToast(\n    content: ToastContent,\n    toastProps: ToastProps,\n    staleId?: Id\n  ) {\n    const { toastId } = toastProps;\n\n    collection[toastId] = {\n      content,\n      props: toastProps\n    };\n    dispatch({\n      type: 'ADD',\n      toastId,\n      staleId\n    });\n  }\n\n  function removeFromCollection(toastId: Id) {\n    delete collection[toastId];\n    forceUpdate();\n  }\n\n  function getToastToRender<T>(\n    cb: (position: ToastPosition, toastList: Toast[]) => T\n  ) {\n    const toastToRender: ToastToRender = {};\n    const toastList = props.newestOnTop\n      ? Object.keys(collection).reverse()\n      : Object.keys(collection);\n\n    for (let i = 0; i < toastList.length; i++) {\n      const toast = collection[toastList[i]];\n      const { position } = toast.props;\n      toastToRender[position] || (toastToRender[position] = []);\n\n      toastToRender[position]!.push(toast);\n    }\n\n    return (Object.keys(toastToRender) as Array<ToastPosition>).map(p =>\n      cb(p, toastToRender[p]!)\n    );\n  }\n\n  return {\n    getToastToRender,\n    collection,\n    containerRef,\n    isToastActive\n  };\n}\n","import {\n  useState,\n  useRef,\n  useEffect,\n  isValidElement,\n  DOMAttributes\n} from 'react';\n\nimport { isFn } from '../utils';\nimport { ToastProps } from '../types';\nimport { useKeeper } from './useKeeper';\n\ninterface Draggable {\n  start: number;\n  x: number;\n  y: number;\n  deltaX: number;\n  removalDistance: number;\n  canCloseOnClick: boolean;\n  canDrag: boolean;\n  boundingRect: DOMRect | null;\n}\n\ntype DragEvent = MouseEvent & TouchEvent;\n\nfunction getX(e: DragEvent) {\n  return e.targetTouches && e.targetTouches.length >= 1\n    ? e.targetTouches[0].clientX\n    : e.clientX;\n}\n\nfunction getY(e: DragEvent) {\n  return e.targetTouches && e.targetTouches.length >= 1\n    ? e.targetTouches[0].clientY\n    : e.clientY;\n}\n\nexport function useToast(props: ToastProps) {\n  const [isRunning, setIsRunning] = useState(true);\n  const [preventExitTransition, setPreventExitTransition] = useState(false);\n  const toastRef = useRef<HTMLDivElement>(null);\n  const drag = useKeeper<Draggable>({\n    start: 0,\n    x: 0,\n    y: 0,\n    deltaX: 0,\n    removalDistance: 0,\n    canCloseOnClick: true,\n    canDrag: false,\n    boundingRect: null\n  });\n  const syncProps = useKeeper(props, true);\n  const { autoClose, pauseOnHover, closeToast, onClick, closeOnClick } = props;\n\n  useEffect(() => {\n    if (isFn(props.onOpen))\n      props.onOpen(isValidElement(props.children) && props.children.props);\n\n    return () => {\n      if (isFn(syncProps.onClose))\n        syncProps.onClose(\n          isValidElement(syncProps.children) && syncProps.children.props\n        );\n    };\n  }, []);\n\n  useEffect(() => {\n    props.draggable && bindDragEvents();\n    return () => {\n      props.draggable && unbindDragEvents();\n    };\n  }, [props.draggable]);\n\n  useEffect(() => {\n    props.pauseOnFocusLoss && bindFocusEvents();\n    return () => {\n      props.pauseOnFocusLoss && unbindFocusEvents();\n    };\n  }, [props.pauseOnFocusLoss]);\n\n  function onDragStart(\n    e: React.MouseEvent<HTMLElement, MouseEvent> | React.TouchEvent<HTMLElement>\n  ) {\n    const toast = toastRef.current!;\n    drag.canCloseOnClick = true;\n    drag.canDrag = true;\n    drag.boundingRect = toast.getBoundingClientRect();\n    toast.style.transition = '';\n    drag.start = drag.x = getX(e.nativeEvent as DragEvent);\n    drag.removalDistance = toast.offsetWidth * (props.draggablePercent / 100);\n  }\n\n  function onDragTransitionEnd() {\n    if (drag.boundingRect) {\n      const { top, bottom, left, right } = drag.boundingRect;\n\n      if (\n        props.pauseOnHover &&\n        drag.x >= left &&\n        drag.x <= right &&\n        drag.y >= top &&\n        drag.y <= bottom\n      ) {\n        pauseToast();\n      } else {\n        playToast();\n      }\n    }\n  }\n\n  function playToast() {\n    setIsRunning(true);\n  }\n\n  function pauseToast() {\n    setIsRunning(false);\n  }\n\n  function bindFocusEvents() {\n    window.addEventListener('focus', playToast);\n    window.addEventListener('blur', pauseToast);\n  }\n\n  function unbindFocusEvents() {\n    window.removeEventListener('focus', playToast);\n    window.removeEventListener('blur', pauseToast);\n  }\n\n  function bindDragEvents() {\n    document.addEventListener('mousemove', onDragMove);\n    document.addEventListener('mouseup', onDragEnd);\n\n    document.addEventListener('touchmove', onDragMove);\n    document.addEventListener('touchend', onDragEnd);\n  }\n\n  function unbindDragEvents() {\n    document.removeEventListener('mousemove', onDragMove);\n    document.removeEventListener('mouseup', onDragEnd);\n\n    document.removeEventListener('touchmove', onDragMove);\n    document.removeEventListener('touchend', onDragEnd);\n  }\n\n  function onDragMove(e: MouseEvent | TouchEvent) {\n    const toast = toastRef.current!;\n\n    if (drag.canDrag) {\n      if (isRunning) pauseToast();\n\n      drag.x = getX(e as DragEvent);\n      drag.deltaX = drag.x - drag.start;\n      drag.y = getY(e as DragEvent);\n\n      // prevent false positif during a toast click\n      if (drag.start !== drag.x) drag.canCloseOnClick = false;\n\n      toast.style.transform = `translateX(${drag.deltaX}px)`;\n      toast.style.opacity = `${1 -\n        Math.abs(drag.deltaX / drag.removalDistance)}`;\n    }\n  }\n\n  function onDragEnd() {\n    const toast = toastRef.current!;\n    if (drag.canDrag) {\n      drag.canDrag = false;\n\n      if (Math.abs(drag.deltaX) > drag.removalDistance) {\n        setPreventExitTransition(true);\n        props.closeToast();\n        return;\n      }\n\n      toast.style.transition = 'transform 0.2s, opacity 0.2s';\n      toast.style.transform = 'translateX(0)';\n      toast.style.opacity = '1';\n    }\n  }\n\n  const eventHandlers: DOMAttributes<HTMLElement> = {\n    onMouseDown: onDragStart,\n    onTouchStart: onDragStart,\n    onMouseUp: onDragTransitionEnd,\n    onTouchEnd: onDragTransitionEnd\n  };\n\n  if (autoClose && pauseOnHover) {\n    eventHandlers.onMouseEnter = pauseToast;\n    eventHandlers.onMouseLeave = playToast;\n  }\n\n  // prevent toast from closing when user drags the toast\n  if (closeOnClick) {\n    eventHandlers.onClick = (e: React.MouseEvent) => {\n      onClick && onClick(e);\n      drag.canCloseOnClick && closeToast();\n    };\n  }\n\n  return {\n    playToast,\n    pauseToast,\n    isRunning,\n    preventExitTransition,\n    toastRef,\n    eventHandlers\n  };\n}\n"]},"metadata":{},"sourceType":"script"}