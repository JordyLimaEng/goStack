{"ast":null,"code":"var _jsxFileName = \"/home/jordy/\\xC1rea de Trabalho/goStack/React-flux/src/pages/Home/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect, useSelector } from 'react-redux';\nimport { MdAddShoppingCart } from 'react-icons/md';\nimport api from '../../services/api';\nimport { formatPrice } from '../../util/format';\nimport * as CartActions from '../../store/modules/cart/actions';\nimport { ProductList } from './styles';\n\nfunction Home({\n  addToCartRequest\n}) {\n  const [products, setProducts] = useState([]);\n  const amount = useSelector(state => state.cart.reduce((amount, product) => {\n    amount[product.id] = product.amount;\n    return amount;\n  }, {}));\n  useEffect(() => {\n    async function loadProducts() {\n      const response = await api.get('products');\n      const data = response.data.map(product => ({ ...product,\n        priceFormatted: formatPrice(product.price)\n      }));\n      setProducts(data);\n    }\n\n    loadProducts();\n  }, []);\n\n  function handleAddProduct(id) {\n    addToCartRequest(id);\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(ProductList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, products.map(product => /*#__PURE__*/React.createElement(\"li\", {\n    key: product.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: product.image,\n    alt: product.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, product.title), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, product.priceFormatted), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => handleAddProduct(product.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MdAddShoppingCart, {\n    size: 16,\n    color: \"#FFF\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }), \" \", amount[product.id] || 0), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, \"ADICIONAR AO CARRINHO\")))));\n}","map":{"version":3,"sources":["/home/jordy/Área de Trabalho/goStack/React-flux/src/pages/Home/index.js"],"names":["React","useState","useEffect","bindActionCreators","connect","useSelector","MdAddShoppingCart","api","formatPrice","CartActions","ProductList","Home","addToCartRequest","products","setProducts","amount","state","cart","reduce","product","id","loadProducts","response","get","data","map","priceFormatted","price","handleAddProduct","image","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,aAArC;AACA,SAASC,iBAAT,QAAkC,gBAAlC;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AACA,SAASC,WAAT,QAA4B,mBAA5B;AAEA,OAAO,KAAKC,WAAZ,MAA6B,kCAA7B;AAEA,SAASC,WAAT,QAA4B,UAA5B;;AAEA,SAASC,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAAoC;AAClC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMc,MAAM,GAAGV,WAAW,CAACW,KAAK,IAC9BA,KAAK,CAACC,IAAN,CAAWC,MAAX,CAAkB,CAACH,MAAD,EAASI,OAAT,KAAqB;AACvCJ,IAAAA,MAAM,CAACI,OAAO,CAACC,EAAT,CAAN,GAAqBD,OAAO,CAACJ,MAA7B;AACA,WAAOA,MAAP;AACD,GAHC,EAGC,EAHD,CADwB,CAA1B;AAMAb,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAemB,YAAf,GAA8B;AAC5B,YAAMC,QAAQ,GAAG,MAAMf,GAAG,CAACgB,GAAJ,CAAQ,UAAR,CAAvB;AAEA,YAAMC,IAAI,GAAGF,QAAQ,CAACE,IAAT,CAAcC,GAAd,CAAkBN,OAAO,KAAK,EACzC,GAAGA,OADsC;AAEzCO,QAAAA,cAAc,EAAElB,WAAW,CAACW,OAAO,CAACQ,KAAT;AAFc,OAAL,CAAzB,CAAb;AAKAb,MAAAA,WAAW,CAACU,IAAD,CAAX;AACD;;AACDH,IAAAA,YAAY;AACb,GAZQ,EAYN,EAZM,CAAT;;AAcA,WAASO,gBAAT,CAA0BR,EAA1B,EAA8B;AAC5BR,IAAAA,gBAAgB,CAACQ,EAAD,CAAhB;AACD;;AAAA;AAED,sBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,QAAQ,CAACY,GAAT,CAAaN,OAAO,iBACnB;AAAI,IAAA,GAAG,EAAEA,OAAO,CAACC,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,GAAG,EAAED,OAAO,CAACU,KADf;AAEE,IAAA,GAAG,EAAEV,OAAO,CAACW,KAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASX,OAAO,CAACW,KAAjB,CALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOX,OAAO,CAACO,cAAf,CANF,eAQE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAE,MAAME,gBAAgB,CAACT,OAAO,CAACC,EAAT,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,iBAAD;AAAmB,IAAA,IAAI,EAAE,EAAzB;AAA6B,IAAA,KAAK,EAAC,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,OACgDL,MAAM,CAACI,OAAO,CAACC,EAAT,CAAN,IAAsB,CADtE,CADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BALF,CARF,CADD,CADH,CADF;AAsBD","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect, useSelector } from 'react-redux';\nimport { MdAddShoppingCart } from 'react-icons/md';\nimport api from '../../services/api';\nimport { formatPrice } from '../../util/format';\n\nimport * as CartActions from '../../store/modules/cart/actions'\n\nimport { ProductList } from './styles';\n\nfunction Home({ addToCartRequest }) {\n  const [products, setProducts] = useState([]);\n  const amount = useSelector(state => \n    state.cart.reduce((amount, product) => {\n    amount[product.id] = product.amount;\n    return amount;\n  }, {}));\n\n  useEffect(() => {\n    async function loadProducts() {\n      const response = await api.get('products');\n\n      const data = response.data.map(product => ({\n        ...product,\n        priceFormatted: formatPrice(product.price),\n      }));\n\n      setProducts(data);\n    }\n    loadProducts();\n  }, []);\n\n  function handleAddProduct(id) {\n    addToCartRequest(id);\n  };\n\n  return (\n    <ProductList>\n      {products.map(product => (\n        <li key={product.id}>\n          <img\n            src={product.image}\n            alt={product.title}\n          />\n          <strong>{product.title}</strong>\n          <span>{product.priceFormatted}</span>\n\n          <button type=\"button\" onClick={() => handleAddProduct(product.id)}>\n            <div>\n              <MdAddShoppingCart size={16} color=\"#FFF\" /> {amount[product.id] || 0}\n            </div>\n\n            <span>ADICIONAR AO CARRINHO</span>\n          </button>\n        </li>\n      ))}\n    </ProductList >\n  );\n}\n"]},"metadata":{},"sourceType":"module"}